"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[14],{762:(t,d,r)=>{r.r(d),r.d(d,{default:()=>e});var p=r(6252);const a=[(0,p.uE)('<h2 id="一、软件过程" tabindex="-1"><a class="header-anchor" href="#一、软件过程"><span><strong>一、软件过程</strong></span></a></h2><p><strong>软件过程</strong>：软件的诞生和生命周期</p><h2 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期"><span><strong>二、生命周期</strong></span></a></h2><h3 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念"><span><strong>1.概念</strong></span></a></h3><p><strong>生命周期</strong>：从设计构想开始，到需求确定、软件设计、软件实现、产品测试与验收、投入使用、版本更新、最后淘汰使用的全过程</p><h3 id="_2-阶段" tabindex="-1"><a class="header-anchor" href="#_2-阶段"><span><strong>2.阶段</strong></span></a></h3><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps6.jpg)</p><p>· 可行性研究：确定待开发软件要解决的问题</p><p>· 需求分析：为了解决客户的问题需要做什么</p><p>· 软件设计：把文档中的功能可操作化</p><p>· 编码：用代码实现方案中的功能</p><p>· 软件测试：发现软件中的缺陷</p><p>· 软件维护：不断更新软件的功能</p><h2 id="三、过程模型" tabindex="-1"><a class="header-anchor" href="#三、过程模型"><span><strong>三、过程模型</strong></span></a></h2><h3 id="_1-分类" tabindex="-1"><a class="header-anchor" href="#_1-分类"><span><strong>1.分类</strong></span></a></h3><h4 id="_1-1-瀑布模型" tabindex="-1"><a class="header-anchor" href="#_1-1-瀑布模型"><span><strong>1.1 瀑布模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps7.jpg)</p><p><strong>瀑布模型</strong>：将软件生命周期划分为需求分析、规格说明、软件设计、程序实现、软件集成和运行维护等六个基本活动，并且规定了它们自上而下、相互衔接的固定次序，如同瀑布流水，逐级下落</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td>模型简单，易于理解</td><td>无法变更适应</td><td>需求不变</td></tr><tr><td>执行容易</td><td></td><td>开发人员经验丰富</td></tr><tr><td></td><td></td><td>软件项目风险低</td></tr></tbody></table><h4 id="_1-2-快速原型模型" tabindex="-1"><a class="header-anchor" href="#_1-2-快速原型模型"><span><strong>1.2 快速原型模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps8.jpg)</p><p><strong>快速原型模型</strong>：快速建立一个能反映用户主要需求的原型系统，通过实践来了解系统的概貌</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td>线性开发，避免回溯</td><td>不利于创新</td><td>有样品、原型的项目</td></tr><tr><td>开发进度快</td><td></td><td>简单、熟悉的领域</td></tr><tr><td></td><td></td><td>进行产品移植、升级</td></tr></tbody></table><h4 id="_1-3-增量模型" tabindex="-1"><a class="header-anchor" href="#_1-3-增量模型"><span><strong>1.3 增量模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps9.jpg)</p><p><strong>增量模型</strong>：产品以模块化的形式设计、实现、集成和测试，每个模块作为增量组件，多个相互作用的模块完成特定的功能</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td>能及时了解项目进展</td><td>无法模块的软件开发会很麻烦</td><td>产品可分批次进行交付</td></tr><tr><td>组件开发降低了开发风险</td><td>每个模块要求可拓展性</td><td>待开发的软件系统能够被模块化</td></tr><tr><td>开发顺序灵活</td><td></td><td>开发人员不熟悉</td></tr><tr><td></td><td></td><td>管理人员水平高</td></tr><tr><td></td><td></td><td>中小型项目</td></tr></tbody></table><h4 id="_1-4-螺旋模型" tabindex="-1"><a class="header-anchor" href="#_1-4-螺旋模型"><span><strong>1.4 螺旋模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps10.jpg)</p><p>螺旋模型：</p><p>· 制定计划：确定软件系统的目标，了解资源限制，选定合适方案</p><p>· 风险分析：评价所选方案，识别潜在风险，制定消除风险机制</p><p>· 实施工程：对下一版本的软件进行开发验证</p><p>· 客户评价：获取客户意见</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td>大幅度降低了软件开发风险</td><td>可操作性不强</td><td>风险较大</td></tr><tr><td></td><td>对管理人员要求高</td><td>大型软件</td></tr><tr><td></td><td></td><td>没有开发经验</td></tr></tbody></table><h4 id="_1-5-喷泉模型" tabindex="-1"><a class="header-anchor" href="#_1-5-喷泉模型"><span><strong>1.5 喷泉模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps11.jpg)</p><p>喷泉模型：</p><p><strong>迭代</strong>：各阶段需要多次重复</p><p><strong>无间隙性</strong>：各个阶段之间没有明显的界限</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td></td><td></td><td>面向对象</td></tr><tr><td></td><td></td><td>某个部分被重复多次</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="_1-6-基于组件开发模型" tabindex="-1"><a class="header-anchor" href="#_1-6-基于组件开发模型"><span><strong>1.6 基于组件开发模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps12.jpg)</p><p><strong>基于组件开发模型</strong>：使用现有的组件和系统框架进行产品开发</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td>降低开发成本和风险</td><td></td><td>有现有的组件和框架</td></tr><tr><td>加快了产品开发速度</td><td></td><td></td></tr></tbody></table><h4 id="_1-7-统一软件开发过程模型" tabindex="-1"><a class="header-anchor" href="#_1-7-统一软件开发过程模型"><span><strong>1.7 统一软件开发过程模型</strong></span></a></h4><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps13.jpg)</p><p>统一软件开发过程模型：</p><p><strong>工作流程</strong>：一系列能产生可见价值的活动</p><p><strong>核心工作流程</strong>：整个项目中，与主要关注领域相关的活动集合</p><p>![](file:///C:\\Users\\djm\\AppData\\Local\\Temp\\ksohtml20308\\wps14.jpg)</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>优点</td><td>缺点</td><td>适用</td></tr><tr><td></td><td></td><td>开发人员素质高</td></tr><tr><td></td><td></td><td>适用广泛</td></tr><tr><td></td><td></td><td>超大型软件</td></tr></tbody></table><p>· 先启：估算项目的成本和绩效，确定项目规模、功能和框架，估计和安排项目进度</p><p>· 细化：建立软件系统的框架</p><p>· 构建：通过迭代实现用例</p><p>· 产品化：测试产品，制作最终版本</p><h3 id="_2-敏捷过程" tabindex="-1"><a class="header-anchor" href="#_2-敏捷过程"><span><strong>2.敏捷过程</strong></span></a></h3><p><strong>敏捷开发</strong>：强调快捷、小文档、轻量级的软件工程方法</p><p>· 个体与交互高于过程和工具</p><p>· 可运行软件高于详尽文档</p><p>· 与客户协作高于合同谈判</p><p>· 对变更及时相应高于遵循计划</p><h3 id="_3-极限编程" tabindex="-1"><a class="header-anchor" href="#_3-极限编程"><span><strong>3.极限编程</strong></span></a></h3><p><strong>极限编程</strong>：是一种实践性较强的、规范化的软件开发方法，强调用户需求和团队工作</p><h3 id="_4-选择软件过程模型" tabindex="-1"><a class="header-anchor" href="#_4-选择软件过程模型"><span><strong>4.选择软件过程模型</strong></span></a></h3><p>· 符合软件自身特性</p><p>· 满足软件进度开发要求</p><p>· 对软件开发的风险进行预防和控制</p><p>· 具有计算机辅助工具的支持</p><p>· 用户和开发人员要具有相应的知识和技能</p><p>· 有利于软件开发的管理与控制</p><h2 id="四、练习" tabindex="-1"><a class="header-anchor" href="#四、练习"><span><strong>四、练习</strong></span></a></h2><p>1. 如何理解软件生命周期的内在特征?</p><p>· 软件产品的生命周期是指从设计该产品的构想开始，到软件需求的确定、软件设计、软件实现、产品测试与验收、投入使用以及产品版本的不断更新，到最终该产品被市场淘汰的全过程。软件生命周期这个概念从时间的角度将软件的开发和维护的复杂过程分解为了若干个阶段，每个阶段都完成特定的相对独立的任务。由于每个阶段的任务相对于总任务难度会大幅度降低，在资源分配、时间把握和项目管理上都会比较容易控制。合理地划分软件生命周期的各个阶段，使各个阶段之间既相互区别又相互联系，为每个阶段赋予特定的任务。</p><p>2. 请对比瀑布模型、快速原型模型、增量模型和螺旋模型</p><p>3. 在统一软件开发过程模型中核心工作流程包含哪些?</p><p>· 业务建模、需求、分析和设计、实现、测试和部署</p><p>4. 当需求不能一次搞清楚，且系统需求比较复杂时应选用哪种开发模型比较适合?</p><p>5. 敏捷过程的核心价值观有哪些?它对传统方法的“反叛”体现在哪些方面?</p><p><strong>核心价值观</strong>：</p><p>· 个体与交互高于过程和工具</p><p>· 可运行软件高于详尽的文档</p><p>· 与客户协作高于合同（契约）</p><p>· 对变更及时响应高于遵循计划</p><p><strong>体现</strong>：</p><p>· 敏捷方法对传统方法的“反叛”体现在以人为中心，不再依靠文档来控制过 程，认为传统过程过于僵化，文档繁琐，主张对传统过程“瘦身”，在上述价 值观的支配下，做到能够为准。</p><p>6. 什么是软件过程?它与软件工程方法学有何关系?</p><p>7. 某大型企业计划开发一个“综合信息管理系统”,该系统涉及销售、供应、财务、生产人力资源等多个部门的信息管理。该企业的想法是按部门优先级别乏别逐个实现，边应用边开发。对此,需要一种比较合适的过程模型。请对这个过程模型做出符合应用需要的选择，并说明选择理由。</p>',88)],s={},e=(0,r(3744).Z)(s,[["render",function(t,d){return(0,p.wg)(),(0,p.iD)("div",null,a)}]])},7974:(t,d,r)=>{r.r(d),r.d(d,{data:()=>p});const p=JSON.parse('{"key":"v-4b242395","path":"/guide/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、软件过程","slug":"一、软件过程","link":"#一、软件过程","children":[]},{"level":2,"title":"二、生命周期","slug":"二、生命周期","link":"#二、生命周期","children":[{"level":3,"title":"1.概念","slug":"_1-概念","link":"#_1-概念","children":[]},{"level":3,"title":"2.阶段","slug":"_2-阶段","link":"#_2-阶段","children":[]}]},{"level":2,"title":"三、过程模型","slug":"三、过程模型","link":"#三、过程模型","children":[{"level":3,"title":"1.分类","slug":"_1-分类","link":"#_1-分类","children":[]},{"level":3,"title":"2.敏捷过程","slug":"_2-敏捷过程","link":"#_2-敏捷过程","children":[]},{"level":3,"title":"3.极限编程","slug":"_3-极限编程","link":"#_3-极限编程","children":[]},{"level":3,"title":"4.选择软件过程模型","slug":"_4-选择软件过程模型","link":"#_4-选择软件过程模型","children":[]}]},{"level":2,"title":"四、练习","slug":"四、练习","link":"#四、练习","children":[]}],"git":{},"filePathRelative":"guide/软件工程/软件过程.md"}')}}]);