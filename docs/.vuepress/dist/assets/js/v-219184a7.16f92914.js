"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[1309],{9550:(l,i,e)=>{e.r(i),e.d(i,{default:()=>s});var a=e(6252);const p=[(0,a.uE)('<h1 id="操作系统" tabindex="-1"><a class="header-anchor" href="#操作系统"><span>操作系统</span></a></h1><h2 id="第一章-引论" tabindex="-1"><a class="header-anchor" href="#第一章-引论"><span>第一章 引论</span></a></h2><h3 id="目标和作用" tabindex="-1"><a class="header-anchor" href="#目标和作用"><span>目标和作用</span></a></h3><p>**目标 **</p><ul><li>方便性 使计算机变得易学易用</li><li>有效性 提高资源利用率和系统吞吐量</li><li>可扩充性 可对原有功能进行修改和扩展</li><li>开放性 彼此兼容，方便互连</li></ul><p><strong>作用</strong></p><ul><li>OS作为用户与计算机硬件系统之间的接口 用户通过OS来使用计算机系统</li><li>命令方式</li><li>系统调用</li><li>图标—窗口</li><li>OS资源管理</li><li>处理机管理</li><li>分配控制处理机</li><li>存储器管理</li><li>内存的分配与回收</li><li>I/O设备管理 I/O设备的分配与操纵</li><li>文件管理 文件的存取、共享与保护</li><li>OS实现了对计算机资源的抽象</li><li>虚拟机<img src="https://api2.mubu.com/v3/document_image/1645946559020d5e6.jpg" alt=""><br> 发展动力<br> 不断提高计算机资源利用率<br> 方便利用<br> 器件的不断更新换代<br> 计算机体系结构的不断发展<br> 不断提出新的应用需求</li></ul><h3 id="_1-2发展过程" tabindex="-1"><a class="header-anchor" href="#_1-2发展过程"><span>1.2发展过程</span></a></h3><p>时间线</p><p>20世纪50年代<br> 出现第一个简单批处理OS<br> 60年代中期<br> 开发出多道程序批处理系统，时分系统，实时OS<br> 70到90年代<br> 微型机OS、多处理机OS和网络OS诞生并发展<br> 历程<br> 人工操作<br> 用户独占全机<br> CPU等待人工操作<br> 单道批处理系统<br> 多道批处理</p><h3 id="_1-3基本特性" tabindex="-1"><a class="header-anchor" href="#_1-3基本特性"><span>1.3基本特性</span></a></h3><h3 id="_1-4主要功能" tabindex="-1"><a class="header-anchor" href="#_1-4主要功能"><span>1.4主要功能</span></a></h3><h3 id="_1-5-os结构设计" tabindex="-1"><a class="header-anchor" href="#_1-5-os结构设计"><span>1.5 OS结构设计</span></a></h3><p>一、前驱图和程序执行</p><p>前驱图</p><p>一个无向循环图，用于描述进程之间的先后顺序</p><p>程序顺序执行</p><ol><li>顺序性</li><li>封闭性</li><li>可在现性</li></ol><p>程序并发执行</p><ol><li>间断性</li><li>失去封闭性</li><li>不可再现性</li></ol><p>二、进程的描述</p><p>定义和特征</p><p>基本状态和转换</p><p>挂起操作</p><p>进程管理中的数据结构</p><p>三、进程控制</p><p>四、进程同步</p><p>五、进程通信</p><p>六、线程</p><p>七、线程的实现</p><p>图灵模型</p><p>【知识点】预防死锁，通过破坏（互斥）是不太实际的 【知识点】临界区是指并发进程中访问共享变量的（程序）段 【知识点】文件管理实际上是管理（辅助存储空间） 【知识点】操作系统是一种（系统软件） 【知识点】操作系统无法提高用户程序的运行速度 【知识点】如果分时系统的时间片一定，那么（用户数越多），响应时间越长 【知识点】操作系统中，进程之间交换数据的过程称为（进程通信） 【知识点】计算机两个系统中两个协作进程之间不能用来进行进程间通信的是（消息传递机制） 【知识点】一个单CPU的操作系统共有n个进程，不考虑进程状态过渡的情况：给出运行进程的个数（1） 【知识点】三个进程共享 4 台绘图仪，每个使用绘图仪的进程最多使用两台，规定每个进程一次仅允许申请一台，则该系统（不会发生死锁） 【知识点】分配到必要的资源并获得处理机时，进程处于（运行状态） 【知识点】在可变分区存储管理中，最佳适应分配算法要求对空闲区表项按（尺寸从小到大）进行排列 【知识点】从用户的角度看，文件系统主要用于实现（按名存取） 【知识点】进程状态变化中，（等待—&gt;运行）变化是不可能发生的 【知识点】当（时间片到）时，进程从运行状态变为就绪状态 【知识点】进程管理中，当（等待的事件发生），进程从阻塞态变成就绪态 【知识点】进程是不是指令的集合 【知识点】（由调度程序为进程分配CPU）不是创建进程所必需的 【知识点】多道程序环境下，操作系统分配资源以（进程）为基本单位 【知识点】原语的主要特点有（不可分割性） 【知识点】控制权从一个线程传送到另一个线程时需要用户态-内核态-用户态的模式切换 【知识点】一个进程被唤醒意味着（进程变为就绪状态） 【知识点】在引入线程的操作系统中，资源分配的基本单位是（进程） 【知识点】撤销父进程时，应该同时撤销子进程 【知识点】原语是不可中断的指令序列 【知识点】Solaris的多线程的实现方式为（混合式） 【判断题】多用户操作系统离开了多终端硬件支持，则无法使用（×） 【判断题】在现代操作系统中，不允许用户干预内存的分配（√） 【判断题】页式存储管理中，一个作业可以占用不连续的内存空间，而段式存储管理中，一个作业则是占用连续的内存空间（×） 【判断题】常用的缓冲技术是解决慢速设备与快速CPU处理之间协调工作（√） 【判断题】可顺序存取的文件不一定能随机存取；但可随机存取的文件都可以顺序存取（√） 【判断题】优先数是进程调度的重要依据，一旦确定不能改变（×） 【判断题】先来先服务算法是一种简单的调度算法，但其效率比较高（×） 【判断题】FCFS调度算法对长作业有利（√） 【问答题】操作系统为什么要引入进程?操作系统为什么要引入线程? 答案： （一）为了使程序在多道程序环境下能并发执行，并能对并发执行的程序加以控制和描述，从而在操作系统中引入了进程概念。引入进程的目的在于清晰地刻画动态系统的内在规律，有效管理和调度进入计算机系统主存储器运行的程序 （二）减小程序在并发执行时所付出的时空开销，提高操作系统的并发性能</p>',32)],r={},s=(0,e(3744).Z)(r,[["render",function(l,i){return(0,a.wg)(),(0,a.iD)("div",null,p)}]])},6860:(l,i,e)=>{e.r(i),e.d(i,{data:()=>a});const a=JSON.parse('{"key":"v-219184a7","path":"/guide/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%80%E7%AD%94%E9%A2%98.html","title":"计算机网络","lang":"en-US","frontmatter":{"title":"计算机网络","date":"2023-09-10T00:00:00.000Z","tags":["计算机组原理"],"categories":["考研","计算机408"]},"headers":[{"level":2,"title":"第一章 引论","slug":"第一章-引论","link":"#第一章-引论","children":[{"level":3,"title":"目标和作用","slug":"目标和作用","link":"#目标和作用","children":[]},{"level":3,"title":"1.2发展过程","slug":"_1-2发展过程","link":"#_1-2发展过程","children":[]},{"level":3,"title":"1.3基本特性","slug":"_1-3基本特性","link":"#_1-3基本特性","children":[]},{"level":3,"title":"1.4主要功能","slug":"_1-4主要功能","link":"#_1-4主要功能","children":[]},{"level":3,"title":"1.5 OS结构设计","slug":"_1-5-os结构设计","link":"#_1-5-os结构设计","children":[]}]}],"git":{},"filePathRelative":"guide/操作系统/简答题.md"}')}}]);