"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[8976],{6964:(n,i,e)=>{e.r(i),e.d(i,{default:()=>t});var l=e(6252);const s=(0,l._)("h1",{id:"centos-7-上-nginx-的安装、配置和使用",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#centos-7-上-nginx-的安装、配置和使用"},[(0,l._)("span",null,"CentOS 7 上 Nginx 的安装、配置和使用")])],-1),d={href:"https://juejin.cn/post/7033349217359921183",target:"_blank",rel:"noopener noreferrer"},a=(0,l.uE)('<p>前不久，一个项目开发完成要上线，作为项目主开发的我也要负责一下部署。</p><p>项目是前后端分离的微服务架构：<code>Spring Cloud 、Vue+ElementUI</code>。在测试环境是直接 jar 包部署各微服务模块，前端直接是 npm run dev 启动。</p><p>部署到正式环境，前端要将 <code>build</code> 之后的项目放在 <code>nginx</code> 中启动，并配置 <code>https</code>，由于我之前也没有配过 <code>nginx</code>，所以踩了很多坑，仅写这篇博客当做笔记。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><strong>Nginx</strong>是一款开源的、跨平台的高性能web服务器，它有着高性能，稳定性高，配置简单，模块结构化，资源消耗低的优点。同时支持反向代理、负载均衡、缓存的功能。其采用多进程+epoll(IO多路复用)模型，也对互联网高并发连接业务有着很好的支持。</p><h2 id="centos-安装-nginx" tabindex="-1"><a class="header-anchor" href="#centos-安装-nginx"><span>CentOS 安装 Nginx</span></a></h2><h3 id="a-依赖环境安装" tabindex="-1"><a class="header-anchor" href="#a-依赖环境安装"><span>A. 依赖环境安装</span></a></h3><p><code>要安装 nginx，要先安装 nginx 的依赖环境：gcc-c++、openssl、pcre、zlib</code></p><p><strong>1. 安装 gcc-c++ 编译器和 openssl</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        r\n\n    \n        \n复制代码\n\n   \n       \n  \n      yum install gcc-c++ \nyum install -y openssl openssl-devel\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 安装 pcre 包</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        复制代码\n\n   \n       \n  \n      yum install -y pcre pcre-devel\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 再安装 zlib 包</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        复制代码\n\n   \n       \n  \n      yum install -y zlib zlib-devel\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="b-nginx-安装" tabindex="-1"><a class="header-anchor" href="#b-nginx-安装"><span>B. Nginx 安装</span></a></h3><p><code>依赖环境安装完成后，我们开始安装 nginx</code></p><p><strong>1. 在 /usr/local/ 目录下创建 java 文件夹</strong></p><p>当然这个文件夹只是我用来放 nginx 安装包的</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      cd /usr/local\nmkdir java\ncd java/\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 使用 wget 命令直接下载 nginx 安装包，也可以直接上传下载好的压缩包</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        arduino\n\n    \n        \n复制代码\n\n   \n       \n  \n      wget https://nginx.org/download/nginx-1.14.0.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 解压并进入解压好的目录</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      tar -zxvf nginx-1.14.0.tar.gz \ncd nginx-1.14.0/\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 使用 nginx 默认配置</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      ./configure\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 编译安装</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        go\n\n    \n        \n复制代码\n\n   \n       \n  \n      make\nmake install\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有报错，那么你的 <code>/usr/local/</code>目录下会多出一个 <code>nginx/</code> 目录（默认安装目录）</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp3-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F2293aba4503b4edd98581bdb2d690103~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><p>进入这个目录看一下（我这里是因为我启动过了，多了一些文件）</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp6-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2Fe195c323b8ac40e6995c4aafb99c75ba~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><p>此时，说明 nginx 已经安装成功，可以启动了。</p><p><strong>6. 进入 /usr/local/nginx/sbin 目录执行启动命令</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      ./nginx\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7. 查看是否启动成功</strong></p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        perl\n\n    \n        \n复制代码\n\n   \n       \n  \n      ps -ef | grep nginx\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp9-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F9724c24c16e74dfe9744dd40ba7e8a29~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><p>网页上访问自己的 ip 地址端口为 80 ，会出现下图欢迎页，至此，nginx <code>安装完成</code>。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp3-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2Fe1a95293388248c4bff6a13457d03303~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><h3 id="c-安装过程中的错误处理" tabindex="-1"><a class="header-anchor" href="#c-安装过程中的错误处理"><span>C. 安装过程中的错误处理</span></a></h3><p>上面安装过程的 第 5 步可能会出现如下错误</p><p><strong>错误一</strong></p><blockquote><p>src/os/unix/ngx_user.c:26:7: error: &#39;struct crypt_data&#39; has no member named &#39;current_salt&#39;</p></blockquote><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp6-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F5451fe784a9044c69de37c591c9f27b7~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""> 这个错误一般是服务器系统版本高或者 nginx 版本高。</p><p><code>解决办法：</code></p><p>在nginx安装文件夹下输入</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      vim src/os/unix/ngx_user.c\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp6-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F10204322394c4269b8f8b800eb2ade62~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""> 注释掉红框中的代码然后保存退出重新 make 即可。</p><p><strong>错误二</strong></p><blockquote><p>cast between incompatible function types from &#39;size_t (*)(ngx_http_script_engine_t <em>)&#39; {aka &#39;long unsigned int (</em> )(struct <em>)&#39;} to &#39;void (</em> )(ngx_http_script_engine_t <em>)&#39; {aka &#39;void (</em>)(struct *)&#39;} [-Werror=cast-function-type]</p></blockquote><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp1-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F200ccdcfe04348e587c344929117286d~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><p><code>解决办法：</code></p><p>打开 vim objs/Makefile 把 -Werrori删掉 （-Werror，它要求GCC将所有的警告当成错误进行处理）</p><h2 id="配置-nginx" tabindex="-1"><a class="header-anchor" href="#配置-nginx"><span>配置 nginx</span></a></h2><p>上面启动的 nginx，我们是用默认的配置文件启动的，真实项目使用的时候，我们肯定要去修改 nginx 的默认配置的。</p><h3 id="a-配置解析" tabindex="-1"><a class="header-anchor" href="#a-配置解析"><span>A. 配置解析</span></a></h3><p>使用如下命令查看上文中安装的 nginx 的默认配置文件：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      vim /usr/local/nginx/nginx-1.14.0/conf/nginx.conf\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fp9-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F2dc9e8c0644543118f409e0b12932f3d~tplv-k3u1fbpfcp-zoom-in-crop-mark%3A1512%3A0%3A0%3A0.awebp%3F&amp;valid=true" alt=""></p><p>这里只截取部分。下面我将列出 nginx 配置文件中的主要配置块的含义：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        ini\n\n    \n        \n复制代码\n\n   \n       \n  \n      ...              #全局块\n\nevents {         #events块\n   ...\n}\n\nhttp      #http块\n{\n    ...   #http全局块\n    server        #server块\n    { \n        ...       #server全局块\n        location [PATTERN]   #location块\n        {\n            ...\n        }\n        location [PATTERN] \n        {\n            ...\n        }\n    }\n    server\n    {\n      ...\n    }\n    ...     #http全局块\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1、<strong>全局块</strong>：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</p><p>2、<strong>events块</strong>：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</p><p>3、<strong>http块</strong>：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</p><p>4、<strong>server块</strong>：配置虚拟主机的相关参数，一个http中可以有多个server。</p><p>5、<strong>location块</strong>：配置请求的路由，以及各种页面的处理情况。</p><p>我们一般主要配置的就是 http 块下的<code>server</code> 块。</p><h3 id="b-配置实战" tabindex="-1"><a class="header-anchor" href="#b-配置实战"><span>B. 配置实战</span></a></h3><p><strong>1. 部署 npm build 之后的前端资源</strong></p><p>将 build 出来的 dist 文件夹放在 <code>/usr/local/nginx/html/</code> 路径下（也可以是其他路径，不固定）</p><p>然后，修改 nginx.config 配置文件：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n          location / {\n            root /usr/local/nginx/html/dist;\n            index index.html index.htm;\n            try_files $uri $uri/ /index.html; # 配置使用路由\n    }\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',72),v={href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A80%2Findex.html%25E3%2580%2582",target:"_blank",rel:"noopener noreferrer"},r=(0,l.uE)('<div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      cd /usr/local/nginx/sbin\n./nginx -s reload\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，前端已经部署好了，接下来我们来配置后端各个微服务的部署</p><p><strong>2. jar 包部署各个微服务，并配置 nginx</strong></p><p>首先，假设 jar 包也部署在这台有 nginx 服务的服务器上，我们需要先启动各个微服务</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n      nohup java -jar xxx.jar &gt; xxx.log &amp; tail -f xxx.log     # 这里的命令不再解释\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后开始修改 nginx.config 配置文件:</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n          location ^~ /erowplatform {\n            proxy_pass https://localhost:8088/erowplatform;\n    }\n\n    location ^~ /gcgk {\n            proxy_pass https://localhost:8088/gcgk;\n    }\n\n    location ^~ /auth {\n            proxy_pass https://localhost:8088/auth;\n    }\n\n\n    location ^~ /code {\n            proxy_pass https://locahost:8088/code;\n    }\n\n    location ^~ /ytb {\n            proxy_pass https://localhost:8088/ytb;\n    }\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们来配置 https。</p><p><strong>3. 配置 https</strong></p><p>假设，你已经有了要配置 https 所需要的证书，至于证书的获取方式，本文不再叙述。</p><p>针对此项目，后端用 jar 包启动，我们需要<code>先在代码中配置 https</code>：</p><p>将你的证书放在<code>网关模块</code>下的 resources 下：xxx.pfx</p><p>然后修改 bootstrap.yml 文件：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        java\n\n    \n        \n复制代码\n\n   \n       \n  \n      server:\n  port: 8080\n  ssl:\n    key-store: classpath:xxx.pfx\n    key-store-password: 123456\n    key-store-type: PKCS12\n    enabled: true #开启HTTPS\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时访问后端接口就要使用 https 了。</p><p>接下来我们来<code>配置 nginx.conf</code>,</p><p>先将 nginx 使用的两个证书文件（xxx.pem、xxx.key）放在某个路径下。</p><p>修改 server 块，正确指向证书所在路径：</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        ini\n\n    \n        \n复制代码\n\n   \n       \n  \n          ssl on;\n    #ssl证书的pem文件路径\n    ssl_certificate  /etc/nginx/conf.d/3997458__xxx.cn.pem;\n    #ssl证书的key文件路径\n    ssl_certificate_key /etc/nginx/conf.d/3997458__xxx.cn.key;\n\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后保存修改重启 nginx。</p><p>下面贴出完整的 myconfig.conf</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        java\n\n    \n        \n复制代码\n\n   \n       \n  \n      server {\n    #监听8080端口\n    listen 8080;\n    #对应的域名\n    server_name yyt.xxx.cn;\n    ssl on;\n    #ssl证书的pem文件路径\n    ssl_certificate  /etc/nginx/conf.d/3997458__xxx.cn.pem;\n    #ssl证书的key文件路径\n    ssl_certificate_key /etc/nginx/conf.d/3997458__xxx.cn.key;\n\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n    client_max_body_size 500M;\n    proxy_set_header X-Forwarded-Host $host;\n    proxy_set_header X-Forwarded-Server $host;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n    location / {\n            root /etc/nginx/html/dist;\n            index index.html index.htm;\n            try_files $uri $uri/ @router; # 配置使用路由\n    }\n\n    location ^~ /erowplatform {\n     proxy_pass https://localhost:8088/erowplatform;\n    }\n\n    location ^~ /gcgk {\n            proxy_pass https://localhost:8088/gcgk;\n    }\n\n    location ^~ /auth {\n            proxy_pass https://localhost:8088/auth;\n    }\n\n\n    location ^~ /code {\n            proxy_pass https://localhost:8088/code;\n    }\n\n    location ^~ /ytb {\n            proxy_pass https://localhost:8088/yyt;\n    }\n\n\n    # 路由配置信息\n    location @router {\n             rewrite ^.*$ /index.html last;\n    }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>域名是映射到服务器地址的。</p><p>为什么是 myconfig.conf 呐？</p><p>是因为我将配置文件单独放了，只需要原来的 nginx.conf 指向 myconfig.conf 即可。</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        bash\n\n    \n        \n复制代码\n\n   \n       \n  \n              include /etc/nginx/conf.d/*.conf;\n        #include /etc/nginx/sites-enabled/*;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>myconfig.conf 放在 <code>/etc/nginx/conf.d/</code> 下。</p><p>至此，配置完成。</p><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h2><p><strong>https 默认访问的是 443 端口</strong></p><p>假如访问 <code>https://yyt.xxx.cn</code> 地址，实际上相当于访问 <code>https://yyt.xxx.cn:443</code> 地址。</p><p>所以可以将上面 myconfig.conf 文件中的监听端口改为 443。不加端口号默认访问。</p><p><strong>http 默认访问的 80 端口</strong></p><p>假如访问 <code>http://yyt.xxx.cn</code> 地址，实际上相当于访问 <code>http://yyt.xxx.cn:80</code> 地址。</p><p>由此，我们可以这样配置让访问 <code>http</code> 的用户重定向到 <code>https</code>：</p><p>myconfig.conf 中新增一个 server</p><div class="language-plain line-numbers-mode" data-ext="plain" data-title="plain"><pre class="language-plain"><code>        perl\n\n    \n        \n复制代码\n\n   \n       \n  \n      server { \n     listen 80; server_name localhost; \n     rewrite ^(.*) https://$server_name$1 permanent; \n    }\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',37),c={href:"https://cubox.pro/my/card?id=7175079757460016627",target:"_blank",rel:"noopener noreferrer"},u={},t=(0,e(3744).Z)(u,[["render",function(n,i){const e=(0,l.up)("ExternalLinkIcon");return(0,l.wg)(),(0,l.iD)("div",null,[s,(0,l._)("p",null,[(0,l._)("a",d,[(0,l.Uk)("juejin.cn"),(0,l.Wm)(e)]),(0,l.Uk)("程序猿秃头之路")]),a,(0,l._)("blockquote",null,[(0,l._)("p",null,[(0,l.Uk)('这三行的意思是如果第一个存在，直接返回；不存在的话读取第二个，如果存在，读取返回；如果还是不存在，就会fall back到 try_files 的最后一个选项 /index.html,发起一个内部 "子请求"，也就是相当于 nginx 发起一个 HTTP 请求到 '),(0,l._)("a",v,[(0,l.Uk)("http://localhost:80/index.html。"),(0,l.Wm)(e)]),(0,l.Uk)(" 保存修改之后，重新启动 nginx：")])]),r,(0,l._)("p",null,[(0,l._)("a",c,[(0,l.Uk)("跳转到 Cubox 查看"),(0,l.Wm)(e)])])])}]])},2904:(n,i,e)=>{e.r(i),e.d(i,{data:()=>l});const l=JSON.parse('{"key":"v-02ea1f50","path":"/guide/15.Linux/CentOS%207%20%E4%B8%8A%20Nginx%20%E7%9A%84%E5%AE%89%E8%A3%85....html","title":"CentOS 7 上 Nginx 的安装、配置和使用","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"CentOS 安装 Nginx","slug":"centos-安装-nginx","link":"#centos-安装-nginx","children":[{"level":3,"title":"A. 依赖环境安装","slug":"a-依赖环境安装","link":"#a-依赖环境安装","children":[]},{"level":3,"title":"B. Nginx 安装","slug":"b-nginx-安装","link":"#b-nginx-安装","children":[]},{"level":3,"title":"C. 安装过程中的错误处理","slug":"c-安装过程中的错误处理","link":"#c-安装过程中的错误处理","children":[]}]},{"level":2,"title":"配置 nginx","slug":"配置-nginx","link":"#配置-nginx","children":[{"level":3,"title":"A. 配置解析","slug":"a-配置解析","link":"#a-配置解析","children":[]},{"level":3,"title":"B. 配置实战","slug":"b-配置实战","link":"#b-配置实战","children":[]}]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[]}],"git":{},"filePathRelative":"guide/15.Linux/CentOS 7 上 Nginx 的安装....md"}')}}]);