"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[9233],{9322:(a,n,s)=>{s.r(n),s.d(n,{default:()=>u});var e=s(6252);const t=s.p+"assets/img/程序员职业发展.14916181.png",l=s.p+"assets/img/数据类型.fbea649f.png",p=s.p+"assets/img/关键字.4af2070f.png",i=s.p+"assets/img/转义字符.138b7720.png",c=s.p+"assets/img/ASCⅡ.21fefcbb.png",d=s.p+"assets/img/类型转换.31cd4709.png",o=s.p+"assets/img/输出格式.339fcf44.png",r=[(0,e.uE)('<h1 id="初级阶段" tabindex="-1"><a class="header-anchor" href="#初级阶段"><span>初级阶段</span></a></h1><h2 id="一、初识" tabindex="-1"><a class="header-anchor" href="#一、初识"><span>一、初识</span></a></h2><h3 id="_1-职业发展" tabindex="-1"><a class="header-anchor" href="#_1-职业发展"><span>1.职业发展</span></a></h3><p><img src="'+t+'" alt=""></p><h3 id="_2-windows开发环境" tabindex="-1"><a class="header-anchor" href="#_2-windows开发环境"><span>2.Windows开发环境</span></a></h3><h4 id="clion" tabindex="-1"><a class="header-anchor" href="#clion"><span>clion</span></a></h4><h4 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span>vscode</span></a></h4><h4 id="dev-c" tabindex="-1"><a class="header-anchor" href="#dev-c"><span>dev c++</span></a></h4><h4 id="codeblocks" tabindex="-1"><a class="header-anchor" href="#codeblocks"><span>codeBlocks</span></a></h4><h3 id="_3-编译调试" tabindex="-1"><a class="header-anchor" href="#_3-编译调试"><span>3.编译调试</span></a></h3><h4 id="程序作用是什么" tabindex="-1"><a class="header-anchor" href="#程序作用是什么"><span>程序作用是什么</span></a></h4><p>完成某种计算</p><h4 id="新建和编译" tabindex="-1"><a class="header-anchor" href="#新建和编译"><span>新建和编译</span></a></h4><h4 id="编译过程和项目位置" tabindex="-1"><a class="header-anchor" href="#编译过程和项目位置"><span>编译过程和项目位置</span></a></h4><h4 id="断点调试" tabindex="-1"><a class="header-anchor" href="#断点调试"><span>断点调试</span></a></h4><h2 id="二、数据类型、输入输出" tabindex="-1"><a class="header-anchor" href="#二、数据类型、输入输出"><span>二、数据类型、输入输出</span></a></h2><h3 id="_1-数据类型" tabindex="-1"><a class="header-anchor" href="#_1-数据类型"><span>1.数据类型</span></a></h3><img src="'+l+'" style="zoom:50%;"><h4 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h4><p>c语言提前起好的名字</p><img src="'+p+'" style="zoom:150%;"><h4 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符"><span>标识符</span></a></h4><p>自己重新命名的名字</p><h4 id="常量" tabindex="-1"><a class="header-anchor" href="#常量"><span>常量</span></a></h4><p>运行过程中不会发生改变的量</p><h4 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h4><p>运行过程中可以发生改变的量</p><blockquote><p>字母、数字、下划线命名，数字不为首</p><p>见名知意，不与关键字重名</p></blockquote><h3 id="_2-整型" tabindex="-1"><a class="header-anchor" href="#_2-整型"><span>2.整型</span></a></h3><h4 id="符号常量" tabindex="-1"><a class="header-anchor" href="#符号常量"><span>符号常量</span></a></h4><p>用一个符号代替一个常量</p><p><code>#define 标识符 常量</code></p><blockquote><p>不用分号结尾</p><p>先定义，再使用</p><p>直接替换，一改全改</p></blockquote><h4 id="整型变量" tabindex="-1"><a class="header-anchor" href="#整型变量"><span>整型变量</span></a></h4><p><code>int 变量名</code></p><blockquote><p>四个字节</p></blockquote><h3 id="_3-浮点型" tabindex="-1"><a class="header-anchor" href="#_3-浮点型"><span>3.浮点型</span></a></h3><h4 id="浮点常量" tabindex="-1"><a class="header-anchor" href="#浮点常量"><span>浮点常量</span></a></h4><p>带小数的常量</p><p>小数形式：0.123</p><p>指数形式：1e3、-.1e-3</p><h4 id="浮点变量" tabindex="-1"><a class="header-anchor" href="#浮点变量"><span>浮点变量</span></a></h4><p><code>float 变量名</code></p><blockquote><p>四个字节</p></blockquote><h3 id="_4-字符型" tabindex="-1"><a class="header-anchor" href="#_4-字符型"><span>4.字符型</span></a></h3><h4 id="字符常量" tabindex="-1"><a class="header-anchor" href="#字符常量"><span>字符常量</span></a></h4><p>不好直接敲出来的字符或者动作，单引号括起来</p><p><code>&#39;字符常量&#39;</code></p><p><img src="'+i+'" alt=""></p><table><thead><tr><th>转义字符</th><th>作用</th></tr></thead><tbody><tr><td><code> \\n</code></td><td>换行</td></tr><tr><td><code> \\b</code></td><td>退格</td></tr><tr><td><code> \\\\</code></td><td>反斜杠</td></tr></tbody></table><blockquote><p>一个字节</p></blockquote><p><img src="'+c+'" alt=""></p><h3 id="_5-混合运算" tabindex="-1"><a class="header-anchor" href="#_5-混合运算"><span>5.混合运算</span></a></h3><h4 id="强制类型转换" tabindex="-1"><a class="header-anchor" href="#强制类型转换"><span>强制类型转换</span></a></h4><p>整数除法结果是小数时</p><img src="'+d+'" style="zoom:50%;"><h4 id="printf" tabindex="-1"><a class="header-anchor" href="#printf"><span>printf</span></a></h4><p>输出到屏幕，默认右对齐</p><p><img src="'+o+'" alt=""></p><table><thead><tr><th style="text-align:left;">格式</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>%c</code></td><td>字符</td></tr><tr><td style="text-align:left;"><code>%d</code></td><td>带符号整数</td></tr><tr><td style="text-align:left;"><code>%f</code></td><td>浮点数</td></tr><tr><td style="text-align:left;"><code>%s</code></td><td>字符串</td></tr><tr><td style="text-align:left;"><code>%u</code></td><td>无符号整数</td></tr><tr><td style="text-align:left;"><code>%x</code>或者<code>%X</code></td><td>无符号十六进制</td></tr><tr><td style="text-align:left;"><code>%o</code>或者<code>%O</code></td><td>无符号八进制</td></tr><tr><td style="text-align:left;"><code>%p</code></td><td>指针</td></tr><tr><td style="text-align:left;"><code>%%</code></td><td>%</td></tr></tbody></table><p><code>%5.2f</code>保留五位，小数点后两位</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="scnaf" tabindex="-1"><a class="header-anchor" href="#scnaf"><span>scnaf</span></a></h4><p>读取键盘输入的值</p><p><code>scanf(&quot; &quot;,&amp; )</code></p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>\n<span class="token comment">//混合输出</span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span> i<span class="token punctuation">,</span>ref<span class="token punctuation">;</span>\n    <span class="token keyword">float</span> f<span class="token punctuation">;</span>\n    <span class="token keyword">char</span> c<span class="token punctuation">;</span>\n    ref<span class="token operator">=</span> <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d %c %f&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ref匹配成功个数</span>\n    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;i=%d,c=%c,f=%f\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>c<span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、运算符表达式" tabindex="-1"><a class="header-anchor" href="#三、运算符表达式"><span>三、运算符表达式</span></a></h2><h2 id="_1-算数运算符" tabindex="-1"><a class="header-anchor" href="#_1-算数运算符"><span>1.算数运算符</span></a></h2><h2 id="_2-关系运算符" tabindex="-1"><a class="header-anchor" href="#_2-关系运算符"><span>2.关系运算符</span></a></h2><h2 id="_3-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_3-逻辑运算符"><span>3.逻辑运算符</span></a></h2><h2 id="_4-位运算符" tabindex="-1"><a class="header-anchor" href="#_4-位运算符"><span>4.位运算符</span></a></h2><h2 id="_5-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_5-赋值运算符"><span>5.赋值运算符</span></a></h2><h2 id="四、选择和循环" tabindex="-1"><a class="header-anchor" href="#四、选择和循环"><span>四、选择和循环</span></a></h2><h2 id="五、数组" tabindex="-1"><a class="header-anchor" href="#五、数组"><span>五、数组</span></a></h2><h2 id="六、指针" tabindex="-1"><a class="header-anchor" href="#六、指针"><span>六、指针</span></a></h2><h2 id="七、函数" tabindex="-1"><a class="header-anchor" href="#七、函数"><span>七、函数</span></a></h2><h2 id="八、结构体" tabindex="-1"><a class="header-anchor" href="#八、结构体"><span>八、结构体</span></a></h2><h1 id="中级阶段" tabindex="-1"><a class="header-anchor" href="#中级阶段"><span>中级阶段</span></a></h1><h1 id="高级阶段" tabindex="-1"><a class="header-anchor" href="#高级阶段"><span>高级阶段</span></a></h1><h1 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h1><h2 id="一、入门" tabindex="-1"><a class="header-anchor" href="#一、入门"><span>一、入门</span></a></h2><h3 id="输出hello-world" tabindex="-1"><a class="header-anchor" href="#输出hello-world"><span>输出hello world</span></a></h3><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、语法" tabindex="-1"><a class="header-anchor" href="#二、语法"><span>二、语法</span></a></h2><h3 id="_1-定义符号常量" tabindex="-1"><a class="header-anchor" href="#_1-定义符号常量"><span>1.定义符号常量</span></a></h3><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">PI</span> <span class="token expression"><span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span></span></span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span> a <span class="token operator">=</span> PI<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n%d&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//二者结果相等为7</span>\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-强制类型转换" tabindex="-1"><a class="header-anchor" href="#_2-强制类型转换"><span>2.强制类型转换</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>#include &lt;stdio.h&gt;\nint main() {\n    int i= 5;\n    float f= (float)i/2;\n    printf(&quot;%f\\n&quot;,f);\n    return 0;\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>\n<span class="token comment">//printf输出</span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">float</span> b <span class="token operator">=</span> <span class="token number">96.1</span><span class="token punctuation">;</span>\n    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;number = %d,score = %5.2f\\n&quot;</span><span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',89)],h={},u=(0,s(3744).Z)(h,[["render",function(a,n){return(0,e.wg)(),(0,e.iD)("div",null,r)}]])},5802:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e=JSON.parse('{"key":"v-7eba83e4","path":"/guide/C%E8%AF%AD%E8%A8%80/%E7%8E%8B%E9%81%93C%E8%AF%AD%E8%A8%80.html","title":"初级阶段","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、初识","slug":"一、初识","link":"#一、初识","children":[{"level":3,"title":"1.职业发展","slug":"_1-职业发展","link":"#_1-职业发展","children":[]},{"level":3,"title":"2.Windows开发环境","slug":"_2-windows开发环境","link":"#_2-windows开发环境","children":[]},{"level":3,"title":"3.编译调试","slug":"_3-编译调试","link":"#_3-编译调试","children":[]}]},{"level":2,"title":"二、数据类型、输入输出","slug":"二、数据类型、输入输出","link":"#二、数据类型、输入输出","children":[{"level":3,"title":"1.数据类型","slug":"_1-数据类型","link":"#_1-数据类型","children":[]},{"level":3,"title":"2.整型","slug":"_2-整型","link":"#_2-整型","children":[]},{"level":3,"title":"3.浮点型","slug":"_3-浮点型","link":"#_3-浮点型","children":[]},{"level":3,"title":"4.字符型","slug":"_4-字符型","link":"#_4-字符型","children":[]},{"level":3,"title":"5.混合运算","slug":"_5-混合运算","link":"#_5-混合运算","children":[]}]},{"level":2,"title":"三、运算符表达式","slug":"三、运算符表达式","link":"#三、运算符表达式","children":[]},{"level":2,"title":"1.算数运算符","slug":"_1-算数运算符","link":"#_1-算数运算符","children":[]},{"level":2,"title":"2.关系运算符","slug":"_2-关系运算符","link":"#_2-关系运算符","children":[]},{"level":2,"title":"3.逻辑运算符","slug":"_3-逻辑运算符","link":"#_3-逻辑运算符","children":[]},{"level":2,"title":"4.位运算符","slug":"_4-位运算符","link":"#_4-位运算符","children":[]},{"level":2,"title":"5.赋值运算符","slug":"_5-赋值运算符","link":"#_5-赋值运算符","children":[]},{"level":2,"title":"四、选择和循环","slug":"四、选择和循环","link":"#四、选择和循环","children":[]},{"level":2,"title":"五、数组","slug":"五、数组","link":"#五、数组","children":[]},{"level":2,"title":"六、指针","slug":"六、指针","link":"#六、指针","children":[]},{"level":2,"title":"七、函数","slug":"七、函数","link":"#七、函数","children":[]},{"level":2,"title":"八、结构体","slug":"八、结构体","link":"#八、结构体","children":[]},{"level":2,"title":"一、入门","slug":"一、入门","link":"#一、入门","children":[{"level":3,"title":"输出hello world","slug":"输出hello-world","link":"#输出hello-world","children":[]}]},{"level":2,"title":"二、语法","slug":"二、语法","link":"#二、语法","children":[{"level":3,"title":"1.定义符号常量","slug":"_1-定义符号常量","link":"#_1-定义符号常量","children":[]},{"level":3,"title":"2.强制类型转换","slug":"_2-强制类型转换","link":"#_2-强制类型转换","children":[]}]}],"git":{},"filePathRelative":"guide/C语言/王道C语言.md"}')}}]);