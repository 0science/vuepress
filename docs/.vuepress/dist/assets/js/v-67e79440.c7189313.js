"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[4539],{235:(e,l,a)=>{a.r(l),a.d(l,{default:()=>s});var p=a(6252);const n=[(0,p.uE)('<h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><p>数据</p><p>数据库</p><p>数据库管理系统</p><p>数据库系统</p><h3 id="发展史" tabindex="-1"><a class="header-anchor" href="#发展史"><span>发展史</span></a></h3><p>人工管理</p><p>文件管理系统</p><p>数据库管理系统</p><h3 id="用户" tabindex="-1"><a class="header-anchor" href="#用户"><span>用户</span></a></h3><p>数据库管理员</p><p>数据库用户</p><h2 id="数据模型" tabindex="-1"><a class="header-anchor" href="#数据模型"><span>数据模型</span></a></h2><h3 id="数据抽象" tabindex="-1"><a class="header-anchor" href="#数据抽象"><span>数据抽象</span></a></h3><p>概念模型</p><p>逻辑模型</p><p>外部模型</p><p>内部模型</p><h3 id="关系模型" tabindex="-1"><a class="header-anchor" href="#关系模型"><span>关系模型</span></a></h3><p>三要素</p><p>数据结构</p><p>完整性约束</p><h2 id="数据库体系结构" tabindex="-1"><a class="header-anchor" href="#数据库体系结构"><span>数据库体系结构</span></a></h2><h3 id="三级结构" tabindex="-1"><a class="header-anchor" href="#三级结构"><span>三级结构</span></a></h3><p>用户级</p><p>概念级</p><p>物理级</p><h3 id="三级模式" tabindex="-1"><a class="header-anchor" href="#三级模式"><span>三级模式</span></a></h3><p>概念模式</p><p>外模式</p><p>内模式</p><h3 id="二级映射" tabindex="-1"><a class="header-anchor" href="#二级映射"><span>二级映射</span></a></h3><p>二级映射</p><h3 id="数据独立性" tabindex="-1"><a class="header-anchor" href="#数据独立性"><span>数据独立性</span></a></h3><p>数据独立性</p><h3 id="开发架构" tabindex="-1"><a class="header-anchor" href="#开发架构"><span><em>开发架构</em></span></a></h3><p>C/S模式</p><p>B/S模式</p><h2 id="高级数据库系统" tabindex="-1"><a class="header-anchor" href="#高级数据库系统"><span><em>高级数据库系统</em></span></a></h2><h3 id="分布式数据库系统" tabindex="-1"><a class="header-anchor" href="#分布式数据库系统"><span>分布式数据库系统</span></a></h3><p>概念</p><p>特点</p><p>体系结构</p><h3 id="面向对象数据库系统" tabindex="-1"><a class="header-anchor" href="#面向对象数据库系统"><span>面向对象数据库系统</span></a></h3><h3 id="并行数据库系统" tabindex="-1"><a class="header-anchor" href="#并行数据库系统"><span>并行数据库系统</span></a></h3><p>概念</p><p>结构</p><h3 id="多媒体数据库系统" tabindex="-1"><a class="header-anchor" href="#多媒体数据库系统"><span>多媒体数据库系统</span></a></h3><h3 id="sql" tabindex="-1"><a class="header-anchor" href="#sql"><span>sql</span></a></h3><p>一、SQL语言介绍</p><p>结构</p><ol><li>SQL用户可以是应用程序，也可以是终端用户</li></ol><p>特点</p><ol><li><p>综合统一</p></li><li><p>高度非过程化</p></li><li><p>面向集合的操作方式</p></li><li><p>同一种语法结构提供两种使用方法</p></li><li><p>语言简洁、易学易用</p></li></ol><p>组成</p><p>二、数据定义</p><p>数据库的定义和删除</p><p>数据类型</p><p>基本表的定义和删除</p><p>三、数据查询</p><p>基本查询</p><p>分组查询</p><p>子查询</p><p>合并结果</p><p>四、数据维护</p><p>插入</p><p>更新</p><p>删除</p><p>五、索引视图</p><p>创建与删除</p><p>视图</p><p>一、目标和作用</p><hr><p>目标</p><p>方便性：使计算机变得易学易用</p><p>有效性：提高资源利用率和系统吞吐量</p><p>可扩充性：微内核结构可添加新功能及对原有功能进行修改和扩展</p><p>开放性：软硬件彼此兼容，方便实现互连</p><hr><p>作用</p><ol><li>OS作为用户与计算机硬件系统之间的接口</li></ol><p>用户通过os能够高效快捷的操纵计算机硬件和运行自己的程序</p><p>通过命令方式，系统调用和图标-窗口来实现与操作系统的通信</p><ol start="2"><li>OS作为计算机资源的管理者</li></ol><p>系统资源可分为处理机，存储器，I/O设备，文件</p><ol start="3"><li>OS实现了对计算机资源的抽象</li></ol><p>二、发展过程</p><hr><p>时间线</p><p>20世纪50年代，出现第一个简单批处理OS</p><p>60年代中期，开发出多道程序批处理系统，时分系统，实时OS</p><p>70到90年代，微型机OS、多处理机OS和网络OS诞生并发展</p><hr><p>发展动力</p><ol><li><p>不断提高计算机资源利用率</p></li><li><p>方便用户利用</p></li><li><p>器件的不断更新换代</p></li><li><p>计算机体系结构的不断发展</p></li><li><p>不断提出新的应用需求</p></li></ol><hr><p>历程</p><p>人工操作方式</p><p>单道批处理系统</p><p>多道批处理系统</p><p>分时系统</p><p>实时系统</p><hr><p>微操作系统</p><p>三、基本特性</p><hr><p>并发</p><hr><p>共享</p><hr><p>虚拟</p><hr><p>异步</p><p>四、主要功能</p><p>五、结构设计</p><h2 id="sql介绍" tabindex="-1"><a class="header-anchor" href="#sql介绍"><span>SQL介绍</span></a></h2><h3 id="sql体系结构" tabindex="-1"><a class="header-anchor" href="#sql体系结构"><span>SQL体系结构</span></a></h3><h3 id="sql特点" tabindex="-1"><a class="header-anchor" href="#sql特点"><span>SQL特点</span></a></h3><h3 id="sql组成" tabindex="-1"><a class="header-anchor" href="#sql组成"><span>SQL组成</span></a></h3><p>数据定义语言</p><p>数据操纵语言</p><p>数据控制语言</p><h2 id="数据定义" tabindex="-1"><a class="header-anchor" href="#数据定义"><span>数据定义</span></a></h2><h3 id="数据库定义" tabindex="-1"><a class="header-anchor" href="#数据库定义"><span>数据库定义</span></a></h3><blockquote><p>[!note] 创建</p></blockquote><blockquote><p><strong>create database</strong> 数据库;</p></blockquote><blockquote><p><code>create database company;</code></p></blockquote><blockquote><p>[!note] 选择</p></blockquote><blockquote><p><strong>use</strong> 数据库；</p></blockquote><blockquote><p><code>use company;</code></p></blockquote><h3 id="数据库删除" tabindex="-1"><a class="header-anchor" href="#数据库删除"><span>数据库删除</span></a></h3><blockquote><p>[!note] 删除</p></blockquote><blockquote><p><strong>drop database</strong> 数据库;</p></blockquote><blockquote><p><code>drop database company;</code></p></blockquote><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h3><p>字符串类型</p><p>数值类型</p><p>时间类型</p><h3 id="基本表定义" tabindex="-1"><a class="header-anchor" href="#基本表定义"><span>基本表定义</span></a></h3><p>创建表</p><p>子查询创建表</p><h3 id="基本表删除" tabindex="-1"><a class="header-anchor" href="#基本表删除"><span>基本表删除</span></a></h3><p>截断表</p><p>删除表</p><h3 id="基本表修改" tabindex="-1"><a class="header-anchor" href="#基本表修改"><span>基本表修改</span></a></h3><p>修改表结构</p><h2 id="数据查询" tabindex="-1"><a class="header-anchor" href="#数据查询"><span>数据查询</span></a></h2><h3 id="基本查询" tabindex="-1"><a class="header-anchor" href="#基本查询"><span>基本查询</span></a></h3><p>select语句</p><h3 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询"><span>分组查询</span></a></h3><p>列名</p><h3 id="连接查询" tabindex="-1"><a class="header-anchor" href="#连接查询"><span>连接查询</span></a></h3><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询"><span>子查询</span></a></h3><h3 id="合并查询结果" tabindex="-1"><a class="header-anchor" href="#合并查询结果"><span>合并查询结果</span></a></h3><h2 id="数据维护" tabindex="-1"><a class="header-anchor" href="#数据维护"><span>数据维护</span></a></h2><h3 id="插入数据" tabindex="-1"><a class="header-anchor" href="#插入数据"><span>插入数据</span></a></h3><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h3><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><h2 id="索引和视图" tabindex="-1"><a class="header-anchor" href="#索引和视图"><span>索引和视图</span></a></h2><h3 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引"><span>创建索引</span></a></h3><h3 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引"><span>删除索引</span></a></h3><h3 id="视图" tabindex="-1"><a class="header-anchor" href="#视图"><span>视图</span></a></h3><p>【单选题】1．在数据管理技术的发展过程中，经历了人工管理阶段、文件系统阶段和数据库系统阶段。在这几个阶段中，数据独立性最高的是 阶段。 A．数据库系统 B．文件系统 C．人工管理 D．数据项管理 答案：A</p><p>【单选题】2．数据库的概念模型独立于 A．具体的机器和DBMS B．E-R图 C．信息世界 D．现实世界 答案：A</p><p>3．数据库的基本特点是（数据可以共享/数据结构化） （数据独立性）（数据冗余小，易扩充）（统一管理和控制）</p><p>【单选题】4.是存储在计算机内有结构的数据的集合。 A．数据库系统 B．数据库 C．数据库管理系统 D．数据结构 答案：B</p><p>【单选题】5．数据库中存储的是 A．数据 B．数据模型 C．数据以及数据之间的联系 D．信息 答案：C</p><p>【单选题】6.数据库中，数据的物理独立性是指 A．数据库与数据库管理系统的相互独立 B．用户程序与DBMS的相互独立 C．用户的应用程序与存储在磁盘上数据库中的数据是相互独立的 D．应用程序与数据库中数据的逻辑结构相互独立 答案：C</p><p>【单选题】7.．数据库的特点之一是数据的共享，严格地讲，这里的数据共享是指 A．同一个应用中的多个程序共享一个数据集合 B．多个用户、同一种语言共享数据 C．多个用户共享一个数据文件 D．多种应用、多种语言、多个用户相互覆盖地使用数据集合 答案：D</p><p>【单选题】8.据库系统的核心是 A．数据库 B．数据库管理系统 C．数据模型 D．软件工具 答案：B</p><p>【单选题】9.下述关于数据库系统的正确叙述是 A．数据库系统减少了数据冗余 B．数据库系统避免了一切冗余 C．数据库系统中数据的一致性是指数据类型一致 D．数据库系统比文件系统能管理更多的数据 答案：A</p><p>10.数将数据库的结构划分成多个层次，是为了提高数据库的 （逻辑独立性） 和 （物理独立性）</p><p>【单选题】11.数据库、数据库系统和数据库管理系统三者之间的关系是 A．DBS包括DB和DBMS B．DDMS包括DB和DBS C．DB包括DBS和DBMS D．DBS就是DB，也就是DBMS 答案：A</p><p>【单选题】12.在数据库中，产生数据不一致的根本原因是 A．数据存储量太大 B．没有严格保护数据 C．未对数据进行完整性控制 D．数据冗余 答案：D</p><p>【单选题】13.数据库管理系统(DBMS)是 A．数学软件 B．应用软件 C．计算机辅助设计 D．系统软件 答案：D</p><p>【单选题】14.数据库管理系统(DBMS)的主要功能是 A．修改数据库 B．定义数据库 C．应用数据库 D．保护数据库 答案：B</p><p>【单选题】15.数据库系统的特点是 数据独立、减少数据冗余、避免数据不一致和加强了数据保护。 A．数据共享 B．数据存储 C．数据应用 D．数据保密 答案：A</p><p>【单选题】16据库系统的最大特点是 A．数据的三级抽象和二级独立性 B．数据共享性 C．数据的结构化 D．数据独立性 答案：A</p><p>【单选题】17.数据库管理系统能实现对数据库中数据的查询、插入、修改和删除等操作，这种功能称为 A．数据定义功能 B．数据管理功能 C．数据操纵功能 D．数据控制功能 答案：C</p><p>【单选题】18.数据库管理系统是 A．操作系统的一部分 B．在操作系统支持下的系统软件 C．一种编译程序 D．一种操作系统 答案：B</p><p>【单选题】19.据库的三级模式结构中，描述数据库中全体数据的全局逻辑结构和特征的是（） A．外模式 B．内模式 C．存储模式 D．模式 答案：D</p><p>【单选题】20据库系统的数据独立性是指 B A．不会因为数据的变 化而影响应用程序 B．不会因为系统数据存储结构与数据逻辑结构的变化而影响应用程序 C．不会因为存储策略的变化而影响存储结构 D．不会因为某些存储结构的变化而影响其他的存储结构 答案：B</p><p>【单选题】21.信息世界中的术语，与之对应的数据库术语为 A．文件 B．数据库 C．字段 D．记录 答案：D</p><p>【单选题】22次型、网状型和关系型数据库划分原则是 A．记录长度 B．文件的大小 C．联系的复杂程度 D．数据之间的联系 答案：D</p><p>【单选题】23.传统的数据模型分类，数据库系统可以分为三种类型 A．大型、中型和小型 B．西文、中文和兼容 C．层次、网状和关系 D．数据、图形和多媒体 答案：C</p><p>【单选题】24.层次模型不能直接表示 A．1 ：1关系 B．1 ：m关系 C．m ：n关系 D．1 ：1和1 ：m关系 答案：C</p><p>【单选题】25.数据库技术的奠基人之一E．F．Codd从1970年起发表过多篇论文，主要论述的是 A．层次数据模型 B．网状数据模型 C．关系数据模型 D．面向对象数据模型 答案：C</p><p>【知识点】数据独立性最高的是（数据库系统）阶段 【知识点】数据库的概念模型独立于（具体的机器和DBMS） 【简答题】数据库的基本特点是 答案： (1)数据可以共享(或数据结构化) (2)数据独立性 (3)数据冗余小，易扩充 (4)统一管理和控制 【知识点】（数据库）是存储在计算机内有结构的数据的集合 【知识点】数据的物理独立性是指（用户的应用程序与存储在磁盘上数据库中的数据是相互独立的） 【知识点】数据共享是指（多种应用、多种语言、多个用户相互覆盖地使用数据集合） 【知识点】据库系统的核心是（数据库管理系统） 【知识点】数据库系统减少了数据冗余 【知识点】数将数据库的结构划分成多个层次，是为了提高数据库的（逻辑独立性）和（物理独立性） 【知识点】DBS包括DB和DBMS 【知识点】在数据库中，产生数据不一致的根本原因是（数据冗余） 【知识点】数据库管理系统(DBMS)是（系统软件） 【知识点】数据库管理系统(DBMS)的主要功能是（定义数据库） 【知识点】数据库系统的特点是（数据共享）、数据独立、减少数据冗余、避免数据不一致和加强了数据保护 【知识点】据库系统的最大特点是（数据的三级抽象和二级独立性） 【知识点】数据库管理系统能实现对数据库中数据的查询、插入、修改和删除等操作，这种功能称为（数据操纵功能） 【知识点】数据库管理系统是（在操作系统支持下的系统软件） 【知识点】据库的三级模式结构中，描述数据库中全体数据的全局逻辑结构和特征的是（模式） 【知识点】据库系统的数据独立性是指（不会因为系统数据存储结构与数据逻辑结构的变化而影响应用程序） 【知识点】信息世界中的术语，与之对应的数据库术语为（记录） 【知识点】次型、网状型和关系型数据库划分原则是（数据之间的联系） 【知识点】传统的数据模型分类，数据库系统可以分为三种类型（层次、网状和关系） 【知识点】层次模型不能直接表示（m ：n关系） 【知识点】数据库技术的奠基人之一 E． F．Codd从1970年起发表过多篇论文，主要论述的是（关系数据模型） 【知识点】 数据管理技术经历了（人工管理） （文件系统）和（数据库系统） 三个阶段 【知识点】数据库是长期存储在计算机内、有（组织的）、（可共享）的数据集合 【知识点】数据独立性又可分为（逻辑数据独立性） 和（物理数据独立性） 【知识点】当数据的物理存储改变了，应用程序不变，而由DBMS处理这种改变，这是指数据的（物理独立性） 【知识点】数据模型是由（数据结构）、（数据操作）和（完整性约束）三部分组成的 【知识点】（数据结构）是对数据系统的静态特性的描述，（数据操作）是对数据库系统的动态特性的描述 【知识点】数据库体系结构按照（模式）、（外模式）和（内模式）三级结构进行组织 【知识点】实体之间的联系可抽象为三类，它们是（1∶1）、（1∶m）和（m∶n） 【知识点】数据冗余可能导致的问题有（浪费存储空间及修改麻烦）和（潜在的数据不一致性） 【知识点】关系数据库管理系统应能实现的专门关系运算包括（选择）、（投影）和（链接） 【知识点】关系模型中，一个关键字是（可由一个或多个其值能惟一标识该关系模式中任何元组的属性组成） 【知识点】当对关系R和S使用自然连接时，要求R和S含有一个或多个共有的（属性） 【知识点】关系运算中花费时间可能最长的运算是（笛卡尔积） 【知识点】关系模式的任何属性（不可再分） 【知识点】五种基本运算为（并、差、选择、投影、乘积） 【知识点】一个关系模式的定义格式为（关系名） 【知识点】一个关系模式的定义主要包括（关系名）、（属性名）、（属性类型）、（属性长度）和（关键字） 【知识点】传统的集合运算有（笛卡尔积）、（并）、（交）和（差） 【知识点】基本的运算是（并）、（交）、（差）、（笛卡尔积）、（投影）和（选择） 【知识点】专门的关系运算有（选择）、（投影）和（连接） 【知识点】①系编号 ②无 ③学号 ④系编号 【知识点】关系数据库中基于数学上两类运算是（关系代数）和（关系演算） 【知识点】SQL语言是（非过程化）的语言，易学 【知识点】SQL是（结构化查询语言） 【知识点】SQL语言是（关系数据库）语言 【知识点】SQL语言具有（数据定义）、（数据操纵）和（数据控制）的功能 【知识点】SQL语言具有两种使用方式，分别称为交互式SQL和（嵌入式SQL） 【知识点】S，C，SC 【知识点】将行(‘005，’，‘乔兴’，‘04’，750)插入到职工表中 【知识点】(‘1031’，‘曾华’，NULL，NULL) 【知识点】视图是一个虚表，它是从（一个或几个基本表）中导出的表，在数据库中，只存放视图的（定义），不存放视图的（视图对应的数据） 【知识点】（可移植性）不是数据库系统必须提供的数据控制功能 【知识点】保护数据库，防止未经授权的或不合法的使用造成的数据泄漏、更改破坏。这是指数据的（安全性） 【知识点】数据库的（完整性）是指数据的正确性和相容性 【知识点】在数据系统中，对存取权限的定义称为（授权） 【知识点】数据库管理系统通常提供授权功能来控制不同用户访问数据的权限，这主要是为了实现数据库的（安全性） 【知识点】REVOKE UPDATE(XH) ON STUD FROM ZHAO 【知识点】GRANT UPDATE (GRADE) ON SC TO ZHAO 【知识点】保护数据安全性的一般方法是（设置用户标识和存取权限） 【知识点】安全性控制的一般方法有（用户标识鉴定）、（存取控制）、（审计）、（数据加密）和视图的保护五级安全措施 【知识点】存取权限包括两方面的内容：（要存取的数据对象）和（对此数据对象进行操作的类型） 【知识点】在SQL语言中，为了数据库的安全性，设置了对数据的存取进行控制的语句，对用户授权使用（GRANT）语句，收回所授的权限使用（REVOKE）语句 【知识点】DBMS存取控制机制主要包括两部分：（自主存取控制）和（强制存取控制） 【知识点】在数据库系统中，保证数据及语义正确和有效的功能是（完整性控制） 【知识点】允许空值的字段上（不）可以定义主键约束 【知识点】在表或视图上执行除了（Create）以外的语句都可以激活触发器 【知识点】数据库的（完整性）是指数据的正确性和相容性 【知识点】在数据库的表定义中，限制成绩属性列的取值在0到100的范围内，属于数据的（用户自定义）约束 【知识点】数据库的完整性是指数据的（实体完整性）、（参照完整性）和（用户定义完整性） 【知识点】参照完整性是指在基本表中（外码可以是空值或者另一个关系主码的有效值） 【知识点】关系规范化中的删除操作异常是指（不该删除的数据被删除），插入操作异常是指（应该插入的数据未被插入） 【知识点】设计性能较优的关系模式称为规范化，规范化主要的理论依据是（关系规范化理论） 【知识点】当关系模式R(A，B)已属于3NF，仍存在一定的插入和删除异常 【知识点】关系模型中的关系模式至少是（1NF） 【知识点】在关系DB中，任何二元关系模式的最高范式必定是（BCNF） 【知识点】在关系模式R中，若其函数依赖集中所有候选关键字都是决定因素，则R最高范式是（4NF） 【知识点】候选关键字中的属性称为（主属性） 【知识点】关系模式的候选关键字可以有（1个或多个），主关键字有（1个） 【知识点】关系模式的分解不惟一 【知识点】部门成员 【知识点】在关系A(S，SN，D)和B(D，CN，NM中，A的主键是S，B的主键是D，则D在S中称为（外部键） 【知识点】在关系数据库的规范化理论中，在执行“分解”时，必须遵守规范化原则：保持原有的依赖关系和（无损连接性） 【知识点】在数据库设计中，用E-R图来描述信息结构但不涉及信息在计算机中的表示，它是数据库设计的（概念设计）段 【知识点】在关系数据库设计中，设计关系模式是（逻辑设计阶段）的任务 【知识点】数据库物理设计完成后，进入数据库实施阶段，下列各项中不属于实施阶段的工作是（扩充功能） 【知识点】在数据库的概念设计中，最常用的数据模型是（实体联系模型） 【知识点】从E-R模型关系向关系模型转换时，一个M∶N联系转换为关系模型时，该关系模式的关键字是（M端实体关键字与N端实体关键字组合） 【知识点】当局部E-R图合并成全局E-R图时可能出现冲突，不属于合并冲突的是（语法冲突） 【知识点】概念模型独立于（硬件设备和DBMS） 【知识点】数据流程图（DFD）是用于描述结构化方法中（需求分析） 阶段的工具 【知识点】下图所示的E-R图转换成关系模型，可以转换为（4）关系模式 【知识点】数据库设计的几个步骤是（需求分析）、（概念设计）、（逻辑设计）、（物理设计）、（系统实施）和（系统运行和维护） 【知识点】一设计内容应该属于数据库（物理）设计阶段 【知识点】在数据库设计中，把数据需求写成文档，它是各类数据描述的集合，包括数据项、数据结构、数据流、数据存储和数据加工过程等的描述，通常称为（数据字典） 【知识点】在设计分E-R图时，由于各个子系统分别有不同的应用，而且往往是由不同的设计人员设计的，所以各个分E-R图之间难免有不一致的地方，这些冲突主要有（属性冲突）、（命名冲突）和（结构冲突）三类 【知识点】修改存储过程使用的语句是（ALTER PROCEDURE） 【知识点】创建存储过程的语句是（CREATE PROCEDUE） 【知识点】下面（DECLARE @count SELECT @count=1）组命令，将变量count值赋值为1 【知识点】在SQL Server 中删除存储过程用（DROP PROC） 【知识点】在SQL Server 编程中，可使用（BEGIN-END）将多个语句捆绑 【知识点】在T-SQL编程语句中，WHILE结构可以根据条件多次重复执行一条语句或一个语句块，还可以使用 （BREAK） 和 CONTINUE 关键字在循环内部控制 WHILE 循环中语句的执行 【知识点】存储过程是存放在（SQL SERVER服务器上）上的预先定义并编译好的T-SQL语句 【知识点】游标是系统为用户开设的一个（数据缓冲区），存放SQL语句的执行结果 【知识点】（事务）是DBMS的基本单位，它是用户定义的一组逻辑一致的程序序列 【知识点】事务的原子性是指（事务中包括的所有操作要么都做，要么都不做） 【知识点】事务的一致性是指（事务必须是使数据库从一个一致性状态变到另一个一致性状态） 【知识点】事务的隔离性是指（一个事务内部的操作及使用的数据对并发的其他事务是隔离的） 【知识点】事务的持续性是指（事务一旦提交，对数据库的改变是永久的） 【知识点】若数据库中只包含成功事务提交的结果，则此数据库就称为处于（一致）状态 【知识点】若系统在运行过程中，由于某种原因，造成系统停止运行，致使事务在执行过程中以非控制方式终止，这时内存中的信息丢失，而存储在外存上的数据未受影响，这种情况称为（系统故障） 【知识点】若系统在运行过程中，由于某种硬件故障，使存储在外存上的数据部分损失或全部损失，这种情况称为（介质故障） 【知识点】（日志文件）用来记录对数据库中数据进行的每一次更新操作 【知识点】用于数据库恢复的重要文件是（日志文件） 【知识点】数据库恢复的基础是利用转储的冗余数据。这些转储的冗余数据包括（日志文件、数据库后备副本） 【知识点】（事务）是DBMS的基本单位 【知识点】若事务在运行过程中，由于种种原因，使事务未运行到正常终止点之间就被撤消，这种情况就称为（事务故障） 【知识点】数据库恢复是将数据库从（错误）状态恢复到（某一已知的正确状态）的功能 【知识点】故障主要有（事务故障）、（系统故障）、（介质故障）和（计算机病毒）和四类 【知识点】数据库系统是利用存储在外存上其他地方的 冗余数据 来重建被破坏的数据库。它主要有两种：（后援副本）和（日志文件） 【知识点】设有两个事务T1、T2，其并发操作如下所示，下面评价正确的是（该操作丢失修改） 【知识点】解决并发操作带来的数据不一致性总是普遍采用（封锁） 【知识点】若事务T对数据R已经加X锁，则其他事务对数据R（不能加任何锁） 【知识点】只有出现并发操作时，才有可能出现死锁 【知识点】对并发操作若不加以控制，可能会带来（不一致）问题 【知识点】DBMS的基本工作单位是事务，它是用户定义的一组逻辑一致的程序序列；并发控制的主要方法是（封锁）机制 【知识点】有两种基本类型的锁，它们是（共享锁）和（排它锁） 【问答题】什么是数据库? 答案： （一）数据库是长期存储在计算机内、有组织的、可共享的数据集合。 （二）数据库是按某种数据模型进行组织的、存放在外存储器上，且可被多个用户同时使用。 （三）数据库具有较小的冗余度，较高的数据独立性和易扩展性。 【问答题】什么是数据库的数据独立性? 答案： （一）数据独立性表示应用程序与数据库中存储的数据不存在依赖关系，包括逻辑数据独立性和物理数据独立性。 （二）逻辑数据独立性是指局部逻辑数据结构(外视图即用户的逻辑文件)与全局逻辑数据结构(概念视图)之间的独立性。 （三）当数据库的全局逻辑数据结构(概念视图)发生变化(数据定义的修改、数据之间联系的变更或增加新的数据类型等)时，它不影响某些局部的逻辑结构的性质，应用程序不必修改。 【问答题】什么是数据库管理系统? 答案： （一）数据库管理系统(DBMS)是操纵和管理数据库的一组软件，它是数据库系统(DBS)的重要组成部分。 （二）不同的数据库系统都配有各自的DBMS，而不同的DBMS各支持一种数据库模型，虽然它们的功能强弱不同，但大多数DBMS的构成相同，功能相似。 （三）一般说来，DBMS具有定义、建立、维护和使用数据库的功能，它通常由三部分构成：数据描述语言及其翻译程序、数据操纵语言及其处理程序和数据库管理的例行程序。 【问答题】什么是数据字典?数据字典包含哪些基本内容? 答案： （一）数据字典是数据库系统中各种描述信息和控制信息的集合，它是数据库设计与管理的有力工具，是进行详细数据收集和数据分析所获得的主要成果。 （二）数据字典的基本内容有：数据项、数据结构、数据流、数据存储和处理过程5个部分 【问答题】平凡的函数依赖 答案： 在关系模式R(U)中，对于U的子集X和Y，如果X→Y，但Y X，则称X→Y是非平凡的函数依赖 【问答题】非平凡的函数依赖 答案： 在关系模式R(U)中，对于U的子集X和Y，若X→Y，但Y X, 则称X→Y是平凡的函数依赖 【问答题】数据库设计一般分为哪几个阶段，每个阶段的主要任务是什么? 答案： （一）数据库设计分为6个阶段：需求分析、概念结构设计、逻辑结构设计、物理结构设计、数据库实施、数据库运行和维护 （二）各阶段任务如下： ①需求分析：准确了解与分析用户需求（包括数据与处理）。 ②概念结构设计：通过对用户需求进行综合、归纳与抽象，形成一个独立于具体 DBMS 的概念模型。 ③逻辑结构设计：将概念结构转换为某个 DBMS 所支持的数据模型，并对其进行优化。 ④数据库物理设计：为逻辑数据模型选取一个最适合应用环境的物理结构（包括存储结构和存取方法）。 ⑤数据库实施：设计人员运用 DBMS 提供的数据语言、工具及宿主语言，根据逻辑设计和物理设计的结果建立数据库，编制与调试应用程序，组织数据入库，并进行试运行。 ⑥数据库运行和维护：在数据库系统运行过程中对其进行评价、调整与修改。 【问答题】什么是事务，事务有哪些特性? 答案： （一）事务是DBMS的基本工作单位，它是用户定义的一组逻辑一致的程序序列。它是一个不可分割的工作单位，其中包含的所有操作，要么都执行，要么都不执行。 （二）事务具有4 个特性：原子性（Atomicity ）、一致性（consistency ）、隔离性( Isolation ）和持续性（Durability ）。这4 个特性也简称为ACID 特性。 （三）原子性：事务是数据库的逻辑工作单位，事务中包括的诸操作要么都做，要么都不做。 （四）一致性：事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。 （五）隔离性：一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据 对其他并发事务是隔离的，并发执行的各个事务之间不能互相干扰。持续性：持续性也称永久性（Perfnanence ) 指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其执行结果有任何影响。 【问答题】事务中的提交和回滚是什么意思? 答案： （一）事务中的提交(COMMIT)是提交事务的所有操作。 （二）具体说就是将事务中所有对数据库的更新写回到磁盘上的物理数据库中去，事务正常结束。 （三）事务中的回滚(ROLLBACK)是数据库滚回到事务开始时的状态。 （四）具体地说就是，在事务运行的过程中发生了某种故障，事务不能继续执行，系统将事务中对数据库的所有已完成的更新操作全部撤消，使数据库回滚到事务开始时的状态。 【问答题】为什么要设立日志文件? 答案： 设立日志文件的目的，是为了记录对数据库中数据的每一次更新操作。从而DBMS可以根据日志文件进行事务故障的恢复和系统故障的恢复，并可结合后援副本进行介质故障的恢复。 【问答题】叙述数据库中死锁产生的原因和解决死锁的方法 答案： （一）死锁产生的原因：封锁可以引起死锁。比如事务T1封锁了数据A，事务T2封锁了数据B。T1又申请封锁数据B，但因B被T2封锁，所以T1只能等待。T2又申请封锁数据A，但A已被T1封锁，所以也处于等待状态。这样，T1和T2处于相互等待状态而均不能结束，这就形成了死锁。 （二）解决死锁的常用方法有如下三种： (1)要求每个事务一次就要将它所需要的数据全部加锁。 (2)预先规定一个封锁顺序，所有的事务都要按这个顺序实行封锁。 (3)允许死锁发生，当死锁发生时，系统就选择一个处理死锁代价小的事务，将其撤消，释放此事务持有的所有的锁，使其他事务能继续运行下去。 【问答题】基本的封锁类型有几种?试叙述它们的含义 答案： （一）基本的封锁的类型有排它锁(“X”锁)和共享锁(“S”锁)两种 （二）若事务T对数据A加上X锁，则只允许事务T读取和修改数据A，其他事务都不能再对A加任何类型的锁，直到T释放A上的锁 （三）若事务T对数据A加上S锁，则其他事务可以再对A加S锁，而不能加X锁，直到T释放A上的锁 【问答题】什么是活锁? 答案： 如果事务 Tl 封锁了数据 R 事务几又请求封锁 R 于是几等待。几也请求封锁 R 当 Tl 释放了 R 上的封锁之后系统首先批准了几的请求，几仍然等待。然后几又请求封锁 R 当几释放了 R 上的封锁之后系统又批准了几的请求 … … 几有可能永远等待，这就是活锁的情形。活锁的含义是该等待事务等待时间太长，似乎被锁住了，实际上可能被激活。</p>',189)],h={},s=(0,a(3744).Z)(h,[["render",function(e,l){return(0,p.wg)(),(0,p.iD)("div",null,n)}]])},9288:(e,l,a)=>{a.r(l),a.d(l,{data:()=>p});const p=JSON.parse('{"key":"v-67e79440","path":"/guide/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"发展史","slug":"发展史","link":"#发展史","children":[]},{"level":3,"title":"用户","slug":"用户","link":"#用户","children":[]}]},{"level":2,"title":"数据模型","slug":"数据模型","link":"#数据模型","children":[{"level":3,"title":"数据抽象","slug":"数据抽象","link":"#数据抽象","children":[]},{"level":3,"title":"关系模型","slug":"关系模型","link":"#关系模型","children":[]}]},{"level":2,"title":"数据库体系结构","slug":"数据库体系结构","link":"#数据库体系结构","children":[{"level":3,"title":"三级结构","slug":"三级结构","link":"#三级结构","children":[]},{"level":3,"title":"三级模式","slug":"三级模式","link":"#三级模式","children":[]},{"level":3,"title":"二级映射","slug":"二级映射","link":"#二级映射","children":[]},{"level":3,"title":"数据独立性","slug":"数据独立性","link":"#数据独立性","children":[]},{"level":3,"title":"开发架构","slug":"开发架构","link":"#开发架构","children":[]}]},{"level":2,"title":"高级数据库系统","slug":"高级数据库系统","link":"#高级数据库系统","children":[{"level":3,"title":"分布式数据库系统","slug":"分布式数据库系统","link":"#分布式数据库系统","children":[]},{"level":3,"title":"面向对象数据库系统","slug":"面向对象数据库系统","link":"#面向对象数据库系统","children":[]},{"level":3,"title":"并行数据库系统","slug":"并行数据库系统","link":"#并行数据库系统","children":[]},{"level":3,"title":"多媒体数据库系统","slug":"多媒体数据库系统","link":"#多媒体数据库系统","children":[]},{"level":3,"title":"sql","slug":"sql","link":"#sql","children":[]}]},{"level":2,"title":"SQL介绍","slug":"sql介绍","link":"#sql介绍","children":[{"level":3,"title":"SQL体系结构","slug":"sql体系结构","link":"#sql体系结构","children":[]},{"level":3,"title":"SQL特点","slug":"sql特点","link":"#sql特点","children":[]},{"level":3,"title":"SQL组成","slug":"sql组成","link":"#sql组成","children":[]}]},{"level":2,"title":"数据定义","slug":"数据定义","link":"#数据定义","children":[{"level":3,"title":"数据库定义","slug":"数据库定义","link":"#数据库定义","children":[]},{"level":3,"title":"数据库删除","slug":"数据库删除","link":"#数据库删除","children":[]},{"level":3,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":3,"title":"基本表定义","slug":"基本表定义","link":"#基本表定义","children":[]},{"level":3,"title":"基本表删除","slug":"基本表删除","link":"#基本表删除","children":[]},{"level":3,"title":"基本表修改","slug":"基本表修改","link":"#基本表修改","children":[]}]},{"level":2,"title":"数据查询","slug":"数据查询","link":"#数据查询","children":[{"level":3,"title":"基本查询","slug":"基本查询","link":"#基本查询","children":[]},{"level":3,"title":"分组查询","slug":"分组查询","link":"#分组查询","children":[]},{"level":3,"title":"连接查询","slug":"连接查询","link":"#连接查询","children":[]},{"level":3,"title":"子查询","slug":"子查询","link":"#子查询","children":[]},{"level":3,"title":"合并查询结果","slug":"合并查询结果","link":"#合并查询结果","children":[]}]},{"level":2,"title":"数据维护","slug":"数据维护","link":"#数据维护","children":[{"level":3,"title":"插入数据","slug":"插入数据","link":"#插入数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]}]},{"level":2,"title":"索引和视图","slug":"索引和视图","link":"#索引和视图","children":[{"level":3,"title":"创建索引","slug":"创建索引","link":"#创建索引","children":[]},{"level":3,"title":"删除索引","slug":"删除索引","link":"#删除索引","children":[]},{"level":3,"title":"视图","slug":"视图","link":"#视图","children":[]}]}],"git":{},"filePathRelative":"guide/数据库/Mysql数据库.md"}')}}]);