"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[729],{9016:(a,t,e)=>{e.r(t),e.d(t,{default:()=>p});var s=e(6252);const n=(0,s.uE)('<h1 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h1><h2 id="_1-git是什么" tabindex="-1"><a class="header-anchor" href="#_1-git是什么"><span>1. Git是什么</span></a></h2><p>定义：<strong>版本管理工具</strong> 特性：</p><ol><li>能够记录历史版本,回退历史版本</li><li>团队开发,方便代码合并</li></ol><h2 id="_2-git的应用" tabindex="-1"><a class="header-anchor" href="#_2-git的应用"><span>2. Git的应用</span></a></h2><blockquote><p>场景一：<strong>备份</strong></p><p>小明负责的模块就要完成了，就在即将Release之前的一瞬间，电脑突然蓝屏，硬盘光荣牺牲！几个月 来的努力付之东流</p></blockquote><hr><blockquote><p>场景二：<strong>代码还原</strong></p><p>这个项目中需要一个很复杂的功能，老王摸索了一个星期终于有眉目了，可是这被改得面目全非的 代码已经回不到从前了。什么地方能买到哆啦A梦的时光机啊？</p></blockquote><hr><blockquote><p>场景三：<strong>协同开发</strong></p><p>小刚和小强先后从文件服务器上下载了同一个文件：Analysis.java。小刚在Analysis.java 文件中的第30行声明了一个方法，叫count()，先保存到了文件服务器上；小强在Analysis.java文件中的 第50行声明了一个方法，叫sum()，也随后保存到了文件服务器上，于是，count()方法就只存在于小刚的记 忆中了</p></blockquote><hr><blockquote><p>场景四：<strong>追溯问题代码的编写人和编写时间</strong></p><p>老王是另一位项目经理，每次因为项目进度挨骂之后，他都不知道该扣哪个程序员的工资！就拿这 次来说吧，有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值！可是二胖、王东、刘流和正经牛都不承认是自己干的！</p></blockquote><h2 id="_3-git的工作流程" tabindex="-1"><a class="header-anchor" href="#_3-git的工作流程"><span>3. Git的工作流程</span></a></h2><h3 id="_3-1-流程图" tabindex="-1"><a class="header-anchor" href="#_3-1-流程图"><span>3.1 流程图</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/df7259efcceaf92dcc44026469c3e83e.jpeg" alt="git流程"></p><h3 id="_3-2-企业中的开发" tabindex="-1"><a class="header-anchor" href="#_3-2-企业中的开发"><span>3.2 企业中的开发</span></a></h3><ol><li>入职第一天，管理人员分配/git账号密码</li><li>开发人员下载代码文档，根据文档搭建环境</li><li>公司团队给予项目相关支持</li><li>接到第一个功能需求</li><li>创建feature分支</li><li>根据开发需求，进行本地测试</li><li>提交代码到当前需求对应的feature分支</li><li>合并分支至test分支，测试人员会在test分支中测试</li><li>测试人员测试bug ，开发者在feature分支上继续修、提交</li><li>测试人员测试通过 ，test分支会被测试人员合并到develop开发分支，再次测试</li><li>develop分支最终会被合并到master主分支</li></ol><blockquote><p>一个需求对应一个feature，id需要标注该需求</p></blockquote><hr><p>为了避免将测试代码提交,需要提交前,检查如下步骤</p><ul><li>是否多提交了某个文件，比如测试文件</li><li>是否漏提交文件</li><li>打开每一个应该提交的文件,判断是否多提交了一行代码,是否少提交了一行代码,是否删除了本应该存在的代码</li><li>检查完毕提交代码</li></ul><h1 id="二、git环境配置" tabindex="-1"><a class="header-anchor" href="#二、git环境配置"><span>二、Git环境配置</span></a></h1><h2 id="_1-git下载" tabindex="-1"><a class="header-anchor" href="#_1-git下载"><span>1.Git下载</span></a></h2>',23),i={href:"https://git-scm.com/download",target:"_blank",rel:"noopener noreferrer"},r=(0,s.uE)('<blockquote><p>Git GUI：Git提供的图形界面工具 Git Bash：Git提供的命令行工具</p></blockquote><h2 id="_2-基本配置" tabindex="-1"><a class="header-anchor" href="#_2-基本配置"><span>2.基本配置</span></a></h2><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>\nSTART<span class="token text string">(打开GitBash)</span><span class="token arrow operator">--&gt;</span>新建文件夹<span class="token arrow operator">--&gt;</span>设置用户信息<span class="token arrow operator">--&gt;</span>END<span class="token text string">(查看配置信息)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>指令</th><th>操作</th></tr></thead><tbody><tr><td>git init</td><td>新建.git文件</td></tr><tr><td>git config --global user.name &quot;用户名&quot;<br>git config --global user.email &quot;邮箱&quot;</td><td>设置用户名<br>设置邮箱</td></tr><tr><td>git config --global user.name<br>git config --global user.email</td><td>查看用户名<br>查看邮箱</td></tr></tbody></table><p><img src="https://i-blog.csdnimg.cn/blog_migrate/f15971f031567cc3d2ccbda2fa55a279.png" alt="git流程"></p><h2 id="_3-配置别名" tabindex="-1"><a class="header-anchor" href="#_3-配置别名"><span>3.配置别名</span></a></h2><p>1.在用户目录下，创建.bashrc 文件</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>touch ~/.bashrc\nvi .bashrc\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://i-blog.csdnimg.cn/blog_migrate/28d6fb2a53fc9355cdea09073357c8bc.png" alt="git流程"></p><p>2.在 .bashrc 文件中输入</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>#用于输出git提交日志 \nalias git-log=&#39;git log --pretty=oneline --all --graph --abbrev-commit&#39; \n#用于输出当前目录所有文件及基本信息 \nalias ll=&#39;ls -al&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://i-blog.csdnimg.cn/blog_migrate/91b32b1308c2135df9edf03b1985413e.png" alt="git流程"></p><p>3.打开gitBash，执行 .bashrc</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>source ~/.bashrc\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://i-blog.csdnimg.cn/blog_migrate/bf306ee21962416334829902495f886f.png" alt="git流程"></p><h1 id="三、git的基本操作" tabindex="-1"><a class="header-anchor" href="#三、git的基本操作"><span>三、Git的基本操作</span></a></h1><h2 id="_1-基础指令" tabindex="-1"><a class="header-anchor" href="#_1-基础指令"><span>1.基础指令</span></a></h2><p>状态转换:</p><ol><li>git add (工作区 --&gt; 暂存区)</li><li>git commit (暂存区 --&gt; 本地仓库)</li></ol><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>ls/ll</td><td>查看当前目录</td></tr><tr><td>cat</td><td>查看文件内容</td></tr><tr><td>touch</td><td>创建文件</td></tr><tr><td>vi</td><td>vi编辑器</td></tr><tr><td>git status</td><td>查看修改的状态(暂存区、工作区)</td></tr><tr><td>git add 文件名/通配符</td><td>添加工作区文件的修改到暂存区</td></tr><tr><td>git commit -m ‘注释内容’</td><td>提交暂存区内容到本地仓库的当前分支</td></tr><tr><td>git reset --hard commitID</td><td>版本切换</td></tr><tr><td>git reﬂog</td><td>查看已经删除的记录</td></tr><tr><td>git log</td><td>查看简化日志</td></tr><tr><td>git log --pretty=oneline --all --graph --abbrev-commit</td><td>查看简化日志</td></tr></tbody></table><h3 id="_1-1详细步骤" tabindex="-1"><a class="header-anchor" href="#_1-1详细步骤"><span>1.1详细步骤</span></a></h3><h4 id="文字说明" tabindex="-1"><a class="header-anchor" href="#文字说明"><span>文字说明</span></a></h4><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>\n基础操作<span class="token arrow operator">--&gt;</span>仓库初始化<span class="token arrow operator">--&gt;</span>新建目录<span class="token arrow operator">--&gt;</span>在目录下打开GitBash<span class="token arrow operator">--&gt;</span>初始化git仓库<span class="token arrow operator">--&gt;</span>查看配置信息\n基础操作<span class="token arrow operator">--&gt;</span>新建文件并提交<span class="token arrow operator">--&gt;</span>目录下新建文件<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>查看日志\n基础操作<span class="token arrow operator">--&gt;</span>修改文件并提交<span class="token arrow operator">--&gt;</span>修改文件内容<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>查看日志\n基础操作<span class="token arrow operator">--&gt;</span>将最后一次修改还原<span class="token arrow operator">--&gt;</span>查看提交记录<span class="token arrow operator">--&gt;</span>找到倒数第2次提交的commitID<span class="token arrow operator">--&gt;</span>版本回退\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h4><h5 id="touch" tabindex="-1"><a class="header-anchor" href="#touch"><span>touch</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/20b3f0739284ada14edc7baf450b93e7.png" alt="git流程"></p><hr><h5 id="git-add-git-status" tabindex="-1"><a class="header-anchor" href="#git-add-git-status"><span>git add / git status</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/ebb7da272ac52ff0b965599644a9cd0e.png" alt="git流程"></p><hr><h5 id="git-commit-m" tabindex="-1"><a class="header-anchor" href="#git-commit-m"><span>git commit -m</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/a6257fb0455573006ed8ea417eb4ece0.png" alt="git流程"></p><hr><h5 id="git-log" tabindex="-1"><a class="header-anchor" href="#git-log"><span>git log</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/360edd795a987c784745c685dab67bbd.png" alt="git流程"></p><hr><h5 id="git-reset-hard" tabindex="-1"><a class="header-anchor" href="#git-reset-hard"><span>git reset --hard</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/41d234005a658b0d6993d07357835c6b.png" alt="git流程"></p><hr><h5 id="git-reflog" tabindex="-1"><a class="header-anchor" href="#git-reflog"><span>git reflog</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d90dd4774d5e0b7901534abb8dd03811.png" alt="git流程"></p><h3 id="_1-2忽略文件" tabindex="-1"><a class="header-anchor" href="#_1-2忽略文件"><span>1.2忽略文件</span></a></h3><p>.gitignore内容</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># Created by .ignore support plugin(hsz.mobi)  \n### Java template  \n*.class  \n  \n# Mobile Tools for java(J2ME)  \n.mtj.tmp/  \n  \n# Package Files  \n*.jar  \n*.war  \n*.ear  \n*.zip  \n  \n#virtual machine crash logs,see http://www.java.com/en/download/help/error_hotspot.xml  \nhs_err_pid*  \n  \n.idea  \n  \n*.iml*.bak  \n*.class  \n*.rar  \n*.log  \n*.project  \n*.settings  \n*.classpath  \ntarget  \nclasses  \nlib  \n*.DS_Store  \n.gradle  \nbuild  \nout  \nlog\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-分支指令" tabindex="-1"><a class="header-anchor" href="#_2-分支指令"><span>2.分支指令</span></a></h2><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>git branch</td><td>查看本地分支</td></tr><tr><td>git branch 分支名</td><td>创建本地分支</td></tr><tr><td>git checkout 分支名</td><td>切换分支</td></tr><tr><td>git checkout -b 分支名</td><td>创建并切换分支</td></tr><tr><td>git merge 分支名</td><td>合并分支</td></tr><tr><td>git branch -d 分支名<br>git branch -D 分支名</td><td>删除分支时，需要做各种检查<br>不做任何检查，强制删除</td></tr></tbody></table><h3 id="_2-1详细指令" tabindex="-1"><a class="header-anchor" href="#_2-1详细指令"><span>2.1详细指令</span></a></h3><h4 id="文字说明-1" tabindex="-1"><a class="header-anchor" href="#文字说明-1"><span>文字说明</span></a></h4><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>\n分支指令<span class="token arrow operator">--&gt;</span>在分支提交<span class="token arrow operator">--&gt;</span>新建分支dev分支<span class="token arrow operator">--&gt;</span>切换到dev分支<span class="token arrow operator">--&gt;</span>新建文件<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>查看日志\n分支指令<span class="token arrow operator">--&gt;</span>合并分支<span class="token arrow operator">--&gt;</span>切换到master分支<span class="token arrow operator">--&gt;</span>合并dev到master分支<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>查看日志\n分支指令<span class="token arrow operator">--&gt;</span>删除分支<span class="token arrow operator">--&gt;</span>切换到master分支<span class="token arrow operator">--&gt;</span>删除dev分支<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>查看日志\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码实现-1" tabindex="-1"><a class="header-anchor" href="#代码实现-1"><span>代码实现</span></a></h4><h4 id="git-banch-git-branch-xxx" tabindex="-1"><a class="header-anchor" href="#git-banch-git-branch-xxx"><span>git banch / git branch xxx</span></a></h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/4daa896b0ecd4eb4c93daea317aad000.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/42fc0ce54ff901560ef2737a8d2041b9.png" alt="git流程"></p><hr><h4 id="git-checkout" tabindex="-1"><a class="header-anchor" href="#git-checkout"><span>git checkout</span></a></h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/5e78c4e3d9e1fff0571b2706d44e5273.png" alt="git流程"></p><hr><h4 id="git-checkout-b" tabindex="-1"><a class="header-anchor" href="#git-checkout-b"><span>git checkout -b</span></a></h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/3a2aa3ff52c0b39f2e997955c0e0bdfb.png" alt="git流程"></p><hr><h4 id="git-merge" tabindex="-1"><a class="header-anchor" href="#git-merge"><span>git merge</span></a></h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d370c51e03a10bfffcab81621972bf08.png" alt="git流程"></p><hr><h4 id="git-branch-d" tabindex="-1"><a class="header-anchor" href="#git-branch-d"><span>git branch -d</span></a></h4><p><img src="https://i-blog.csdnimg.cn/blog_migrate/1e35cf77d17601b10959754a61c1d4cd.png" alt="git流程"></p><h3 id="_2-2解决冲突" tabindex="-1"><a class="header-anchor" href="#_2-2解决冲突"><span>2.2解决冲突</span></a></h3><p>冲突原因：同时修改了同一个文件的同一行</p><p>解决方法：</p><ol><li>处理文件中冲突的地方</li><li>将解决完冲突的文件加入暂存区</li><li>提交到仓库</li></ol><hr><p><img src="https://i-blog.csdnimg.cn/blog_migrate/7067d948a0c8a8f502023f89a2cd6841.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/7067d948a0c8a8f502023f89a2cd6841.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/7067d948a0c8a8f502023f89a2cd6841.png" alt="git流程"></p><h3 id="_2-3分支使用原则及流程" tabindex="-1"><a class="header-anchor" href="#_2-3分支使用原则及流程"><span>2.3分支使用原则及流程</span></a></h3><table><thead><tr><th>概念</th><th>解释</th></tr></thead><tbody><tr><td>master生产分支</td><td>主分支，中小规模项目作为线上运行的应用对应的分支</td></tr><tr><td>develop开发分支</td><td>从master创建的分支，一般作为开发部门的主要开发分支，阶段开发完成后，需要合并到master分支上</td></tr><tr><td>feature分支</td><td>从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完 成后合并到develop分支</td></tr><tr><td>hotﬁx分支</td><td>从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、 develop分支</td></tr></tbody></table><p><img src="https://i-blog.csdnimg.cn/blog_migrate/12d1cbebdc2a60a720e04061b64e3097.png" alt="git流程"></p><h3 id="_2-4强制删除场景" tabindex="-1"><a class="header-anchor" href="#_2-4强制删除场景"><span>2.4强制删除场景</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/c35af688e3e7c0bf3e99bc1d32b1d227.png" alt="git流程"></p><h3 id="_2-5快进模式" tabindex="-1"><a class="header-anchor" href="#_2-5快进模式"><span>2.5快进模式</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/908381cc1bcf71bfde343e23fa0dedfe.png" alt="git流程"></p><h1 id="四、远程仓库" tabindex="-1"><a class="header-anchor" href="#四、远程仓库"><span>四、远程仓库</span></a></h1><h2 id="_1-常用仓库" tabindex="-1"><a class="header-anchor" href="#_1-常用仓库"><span>1.常用仓库</span></a></h2>',79),l={href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://gitee.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://about.gitlab.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,s.uE)('<h2 id="_2-创建远程仓库" tabindex="-1"><a class="header-anchor" href="#_2-创建远程仓库"><span>2.创建远程仓库</span></a></h2><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>\n创建远程仓库<span class="token arrow operator">--&gt;</span>注册码云<span class="token arrow operator">--&gt;</span>新建仓库<span class="token arrow operator">--&gt;</span>配置SSH公钥<span class="token arrow operator">--&gt;</span>远程仓库添加公钥<span class="token arrow operator">--&gt;</span>查看连接状态\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1注册码云" tabindex="-1"><a class="header-anchor" href="#_2-1注册码云"><span>2.1注册码云</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/9e577ea56ef43dba1ff2031e82050d4b.png" alt="image.png"></p><h3 id="_2-2新建仓库" tabindex="-1"><a class="header-anchor" href="#_2-2新建仓库"><span>2.2新建仓库</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/8bb30b94764a88b467cc37a48a277f57.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/37345b42f284ceb6bfa0e7e120cade52.png" alt="git流程"></p><h3 id="_2-3配置ssh公钥" tabindex="-1"><a class="header-anchor" href="#_2-3配置ssh公钥"><span>2.3配置SSH公钥</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>ssh-keygen -t rsa //生成SSH公钥\ncat ~/.ssh/id_rsa.pub //获取公钥\nssh -T git@gitee.com //验证是否配置成功\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://i-blog.csdnimg.cn/blog_migrate/515d4d4d0424186ff9ba249782893990.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/cd1cd73bcd9fc60afa4b262fa2b1e944.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/aeed18d4f64f2352d93c1046260aa583.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/bb807455a3ef6ce62c50fb5360824904.png" alt="git流程"></p><h2 id="_3-操作远程仓库" tabindex="-1"><a class="header-anchor" href="#_3-操作远程仓库"><span>3.操作远程仓库</span></a></h2><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</td><td>先初始化本地库，然后与已创建的远程库进行对接</td></tr><tr><td>git remote</td><td>查看远程仓库</td></tr><tr><td>git push[option]&lt;远端名称&gt;&lt;本地分支名&gt;&lt;:远端分支名&gt;<br> -f<br> --set-upstream</td><td>推送到远程仓库<br> 强制覆盖<br> 推送到远端并建立和远端分支的关联关系</td></tr><tr><td>git branch -vv</td><td>查看关联关系</td></tr><tr><td>git clone &lt;仓库路径&gt;&lt;本地目录&gt;</td><td>从远程仓库克隆</td></tr><tr><td>git fetch [remote name] [branch name]</td><td>抓取（将仓库里的更新都抓取到本地，不会进行合并）</td></tr><tr><td>git pull [remote name] [branch name]</td><td>拉取（将远端仓库的修改拉到本地并自动进行合并）</td></tr><tr><td>git config --global core.autocrlf true<br>git config --global core.autocrlf input</td><td>Windows系统下在提交代码时自动将LF转换为CRLF<br>Linux/macOS系统下在提交代码时自动将CRLF转换为LF</td></tr></tbody></table><p>如果远程分支名和本地分支名称相同，则可以只写本地分支 如果当前分支已经和远端分支关联 ，则可以省略分支名和远端名 如果已经有一个远端仓库，我们可以直接clone到本地，本地目录可以省略，会自动生成一个目录</p><h3 id="_3-1详细指令" tabindex="-1"><a class="header-anchor" href="#_3-1详细指令"><span>3.1详细指令</span></a></h3><h4 id="文字说明-2" tabindex="-1"><a class="header-anchor" href="#文字说明-2"><span>文字说明</span></a></h4><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR<span class="token punctuation">;</span>\n操作远程仓库<span class="token arrow operator">--&gt;</span>创建远程仓库<span class="token arrow operator">--&gt;</span>注册码云<span class="token arrow operator">--&gt;</span>新建仓库<span class="token arrow operator">--&gt;</span>配置SSH公钥<span class="token arrow operator">--&gt;</span>远程仓库添加公钥<span class="token arrow operator">--&gt;</span>查看连接状态\n操作远程仓库<span class="token arrow operator">--&gt;</span>将本地仓库推送到远程仓库<span class="token arrow operator">--&gt;</span>添加远程仓库<span class="token arrow operator">--&gt;</span>将master分支推送到远程仓库<span class="token arrow operator">--&gt;</span>与远程仓库的master分支绑定关联关系\n操作远程仓库<span class="token arrow operator">--&gt;</span>将远程仓库克隆到本地<span class="token arrow operator">--&gt;</span>将远程仓库克隆到本地目录下<span class="token arrow operator">--&gt;</span>查看日志\n操作远程仓库<span class="token arrow operator">--&gt;</span>将本地修改推送到远程仓库<span class="token arrow operator">--&gt;</span>创建文件<span class="token arrow operator">--&gt;</span>将修改加入暂存区<span class="token arrow operator">--&gt;</span>将修改提交到本地仓库<span class="token arrow operator">--&gt;</span>将master分支的修改推送到远程仓库\n操作远程仓库<span class="token arrow operator">--&gt;</span>将远程仓库的修改更新到本地<span class="token arrow operator">--&gt;</span>在远程仓库中修改<span class="token arrow operator">--&gt;</span>拉取远程仓库到本地\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码实现-2" tabindex="-1"><a class="header-anchor" href="#代码实现-2"><span>代码实现</span></a></h4><h5 id="git-remote-add-git-remote-git-push" tabindex="-1"><a class="header-anchor" href="#git-remote-add-git-remote-git-push"><span>git remote add / git remote / git push</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/9320e421967f2c193601e497ad321b01.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/d13e0132e5496b1e2f4ecf4a81f85555.png" alt="git流程"></p><hr><h5 id="git-push-set-upstream-git-branch-vv" tabindex="-1"><a class="header-anchor" href="#git-push-set-upstream-git-branch-vv"><span>git push --set-upstream / git branch -vv</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/f9b7f32649995518d074fbd3a1e0043d.png" alt="git流程"></p><hr><h5 id="git-clone" tabindex="-1"><a class="header-anchor" href="#git-clone"><span>git clone</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/47b60a03f6d1d4dc5bb3c463399d7255.png" alt="git流程"> 克隆前（本地文件） <img src="https://i-blog.csdnimg.cn/blog_migrate/ccb8a21d5a472f8423c00cca8a8d72b9.png" alt="git流程"> 克隆后（抓取的文件） <img src="https://i-blog.csdnimg.cn/blog_migrate/b6e22b60e3819e97c122b06e4ada4dd9.png" alt="git流程"></p><hr><h5 id="git-fetch" tabindex="-1"><a class="header-anchor" href="#git-fetch"><span>git fetch</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/6b1c2874645764d540e4e591eea8fca0.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/689eaa0b081ca7a31ed4445e5b5bbfa5.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/b574b381523f2d78f3f45cd45c11ecd7.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/896a81575c717b736868c75005ddee29.png" alt="git流程"></p><hr><h5 id="git-pull-git-push-git-merge" tabindex="-1"><a class="header-anchor" href="#git-pull-git-push-git-merge"><span>git pull = git push +git merge</span></a></h5><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b641d9efe1e86c6d3221567be70fa844.png" alt="git流程"><img src="https://i-blog.csdnimg.cn/blog_migrate/43459d5dfa5f24a3c84075c954858ac5.png" alt="git流程"></p><h3 id="_3-2合并冲突" tabindex="-1"><a class="header-anchor" href="#_3-2合并冲突"><span>3.2合并冲突</span></a></h3><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d1404258b8f1e8b7eb7c90decfaae3e4.png" alt="git流程"></p><hr><p>本地仓库修改上传 <img src="https://i-blog.csdnimg.cn/blog_migrate/f47250ae938a15e2a5caf6d7653923eb.png" alt="git流程"> 克隆仓库修改上传 <img src="https://i-blog.csdnimg.cn/blog_migrate/b60f85629ff2553237a0d1e981c9f98d.png" alt="git流程"> 上传后产生冲突 <img src="https://i-blog.csdnimg.cn/blog_migrate/b8c546ec06ecf475f531748ab1eb3b28.png" alt="git流程"> 克隆仓库修改后重新上传 <img src="https://i-blog.csdnimg.cn/blog_migrate/dd3635976f710dc44fa6be3f22ca7e3b.png" alt="git流程"> 本地仓库重新拉取 <img src="https://i-blog.csdnimg.cn/blog_migrate/5b2c28cd7c46c4c9dc6d78ce995a5f8d.png" alt="git流程"></p>',34),o={},p=(0,e(3744).Z)(o,[["render",function(a,t){const e=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)("div",null,[n,(0,s._)("p",null,[(0,s.Uk)("官网入口："),(0,s._)("a",i,[(0,s.Uk)("Git官网"),(0,s.Wm)(e)])]),r,(0,s._)("p",null,[(0,s._)("a",l,[(0,s.Uk)("gitHub"),(0,s.Wm)(e)])]),(0,s._)("p",null,[(0,s._)("a",d,[(0,s.Uk)("码云"),(0,s.Wm)(e)])]),(0,s._)("p",null,[(0,s._)("a",g,[(0,s.Uk)("GitLab"),(0,s.Wm)(e)])]),c])}]])},5990:(a,t,e)=>{e.r(t),e.d(t,{data:()=>s});const s=JSON.parse('{"key":"v-68e6c1b0","path":"/guide/01.%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/Git%E5%AE%9E%E8%B7%B5.html","title":"一、概述","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1. Git是什么","slug":"_1-git是什么","link":"#_1-git是什么","children":[]},{"level":2,"title":"2. Git的应用","slug":"_2-git的应用","link":"#_2-git的应用","children":[]},{"level":2,"title":"3. Git的工作流程","slug":"_3-git的工作流程","link":"#_3-git的工作流程","children":[{"level":3,"title":"3.1 流程图","slug":"_3-1-流程图","link":"#_3-1-流程图","children":[]},{"level":3,"title":"3.2 企业中的开发","slug":"_3-2-企业中的开发","link":"#_3-2-企业中的开发","children":[]}]},{"level":2,"title":"1.Git下载","slug":"_1-git下载","link":"#_1-git下载","children":[]},{"level":2,"title":"2.基本配置","slug":"_2-基本配置","link":"#_2-基本配置","children":[]},{"level":2,"title":"3.配置别名","slug":"_3-配置别名","link":"#_3-配置别名","children":[]},{"level":2,"title":"1.基础指令","slug":"_1-基础指令","link":"#_1-基础指令","children":[{"level":3,"title":"1.1详细步骤","slug":"_1-1详细步骤","link":"#_1-1详细步骤","children":[]},{"level":3,"title":"1.2忽略文件","slug":"_1-2忽略文件","link":"#_1-2忽略文件","children":[]}]},{"level":2,"title":"2.分支指令","slug":"_2-分支指令","link":"#_2-分支指令","children":[{"level":3,"title":"2.1详细指令","slug":"_2-1详细指令","link":"#_2-1详细指令","children":[]},{"level":3,"title":"2.2解决冲突","slug":"_2-2解决冲突","link":"#_2-2解决冲突","children":[]},{"level":3,"title":"2.3分支使用原则及流程","slug":"_2-3分支使用原则及流程","link":"#_2-3分支使用原则及流程","children":[]},{"level":3,"title":"2.4强制删除场景","slug":"_2-4强制删除场景","link":"#_2-4强制删除场景","children":[]},{"level":3,"title":"2.5快进模式","slug":"_2-5快进模式","link":"#_2-5快进模式","children":[]}]},{"level":2,"title":"1.常用仓库","slug":"_1-常用仓库","link":"#_1-常用仓库","children":[]},{"level":2,"title":"2.创建远程仓库","slug":"_2-创建远程仓库","link":"#_2-创建远程仓库","children":[{"level":3,"title":"2.1注册码云","slug":"_2-1注册码云","link":"#_2-1注册码云","children":[]},{"level":3,"title":"2.2新建仓库","slug":"_2-2新建仓库","link":"#_2-2新建仓库","children":[]},{"level":3,"title":"2.3配置SSH公钥","slug":"_2-3配置ssh公钥","link":"#_2-3配置ssh公钥","children":[]}]},{"level":2,"title":"3.操作远程仓库","slug":"_3-操作远程仓库","link":"#_3-操作远程仓库","children":[{"level":3,"title":"3.1详细指令","slug":"_3-1详细指令","link":"#_3-1详细指令","children":[]},{"level":3,"title":"3.2合并冲突","slug":"_3-2合并冲突","link":"#_3-2合并冲突","children":[]}]}],"git":{},"filePathRelative":"guide/01.前端工具/Git实践.md"}')}}]);