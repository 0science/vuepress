"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[6401],{8065:(e,t,a)=>{a.r(t),a.d(t,{default:()=>B});var n=a(6252);const p=(0,n._)("h1",{id:"uni-app项目打包成apk-本地打包篇",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#uni-app项目打包成apk-本地打包篇"},[(0,n._)("span",null,"uni-app项目打包成apk（本地打包篇）")])],-1),r={href:"https://blog.csdn.net/zxczero/article/details/126624787",target:"_blank",rel:"noopener noreferrer"},s={href:"https://so.csdn.net/so/search?q=uni-app&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},l=(0,n._)("p",null,"下面的步骤，不要跳步，一步步看，肯定是可以成功的。",-1),d=(0,n._)("h3",{id:"t0-1-本次用到的工具",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#t0-1-本次用到的工具"},[(0,n._)("span",null,[(0,n.Uk)("{#t0}"),(0,n._)("strong",null,"1. 本次用到的工具:")])])],-1),i=(0,n._)("li",null,[(0,n.Uk)("代码开发工具："),(0,n._)("strong",null,"HBuilder X")],-1),o=(0,n._)("li",null,[(0,n.Uk)("apk打包工具："),(0,n._)("strong",null,"Android Studio")],-1),g=(0,n._)("strong",null,"Android离线SDK",-1),c={href:"https://nativesupport.dcloud.net.cn/AppDocs/download/android",target:"_blank",rel:"noopener noreferrer"},u=(0,n._)("strong",null,"jdk1.8",-1),m={href:"https://so.csdn.net/so/search?q=jdk%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/read/cv14139888",target:"_blank",rel:"noopener noreferrer"},f={href:"https://dev.dcloud.net.cn/#/pages/app/list",target:"_blank",rel:"noopener noreferrer"},k=(0,n.uE)('<h3 id="t1-2-导出前的配置" tabindex="-1"><a class="header-anchor" href="#t1-2-导出前的配置"><span>{#t1}2. 导出前的配置</span></a></h3><p>在 <strong>HBuilder X</strong> 中打开uni-app项目中的 <strong>mainifest.json</strong>文件，会弹出来一些可配置的内容，这次我们简单一点，只配置基础配置。其中 **uni-app应用标识(AppID)**如果默认没有的话，点后面的 <strong>重新获取</strong>即可，它会警告你，不过点了没事，且会为你生成一个AppID。然后就是选择开发使用的vue版本，按实际选择即可，其它的貌似可以随便填（如果只是做打包测试的话）。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F332c167ff1ce40df9c537e84caad55d6.png&amp;valid=false" alt=""></p><h3 id="t2-3-导出uni-app项目供打包使用" tabindex="-1"><a class="header-anchor" href="#t2-3-导出uni-app项目供打包使用"><span>{#t2}3. 导出uni-app项目供打包使用</span></a></h3><p>项目代码在自己手机上测试运行成功后，我们需要把uni-app的项目导出。点击 <strong>HBuilder X</strong> 上方的 <strong>发行</strong> --&gt;<strong>原生App-本地打包</strong> --&gt;<strong>生成本地打包App资源</strong> 即可。如果是第一次点击，可能会提示你装什么东西，按提示的来，同意安装就可以了。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F06bb61fb22aa48d3b15fde9bb56a0645.png&amp;valid=false" alt=""></p><p>导出成功后，<strong>HBuilder X</strong> 下方的控制台会告诉你导出路径。至此，<strong>HBuilder X</strong>的任务完成。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Feae7f81498c54355b25347c2ca763050.png&amp;valid=false" alt=""></p><h3 id="t3-4-下载android离线sdk" tabindex="-1"><a class="header-anchor" href="#t3-4-下载android离线sdk"><span>{#t3} 4. 下载Android离线SDK</span></a></h3>',9),b=(0,n._)("strong",null,"Android离线SDK",-1),_={href:"https://nativesupport.dcloud.net.cn/AppDocs/download/android",target:"_blank",rel:"noopener noreferrer"},A=(0,n.uE)('<p>这个sdk可能不止用来打包apk，但目前我只是用来打包apk。</p><h3 id="t4-5-将hbuilder-x导出的文件夹移动到离线sdk中" tabindex="-1"><a class="header-anchor" href="#t4-5-将hbuilder-x导出的文件夹移动到离线sdk中"><span>{#t4} 5. 将HBuilder X导出的文件夹移动到离线SDK中</span></a></h3><p>将刚才 <strong>HBuilder X</strong> 导出的以AppID命名的文件夹（www文件夹的上一级）整个移动到离线SDK的<strong>HBuilder-Integrate-AS\\simpleDemo\\src\\main\\assets\\apps</strong>路径下，该路径下默认会有一个叫 <strong>__UNI__A</strong> 的文件夹，这个直接删除，我们用不到。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Ff3687d68676b43b7b6b7f419fc964535.png&amp;valid=false" alt=""></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F9352f1c249b645809ba94c4e27755771.png&amp;valid=false" alt=""></p><h3 id="t5-6-android-studio-导入sdk中的示例项目" tabindex="-1"><a class="header-anchor" href="#t5-6-android-studio-导入sdk中的示例项目"><span>{#t5} 6. Android Studio 导入SDK中的示例项目</span></a></h3><p>如果第一次安装 <strong>Android Studio</strong>，安装过程中会提示你缺啥好像，记不太清了，直接cancel那个提示，然后跟着引导一步步安装就行了，安装结束后，好像也没什么问题。</p><p>接着导入离线SDK中的 <strong>HBuilder-Integrate-AS</strong> 文件夹到 <strong>Android Studio</strong> 中。<strong>注意：文件路径中不要出现中文！否则会报错！</strong></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fecb193a01ed3413aaa7bc6ec70262620.png&amp;valid=false" alt=""></p><h3 id="t6-7-修改dcloud-control-xml-中的-appid" tabindex="-1"><a class="header-anchor" href="#t6-7-修改dcloud-control-xml-中的-appid"><span>{#t6}7. 修改dcloud_control.xml 中的 appid</span></a></h3><p>接下来，别纠结截图中我 <strong>Android Studio</strong>的文件结构为什么你不一样，截图中有些文件夹或者路径好像被隐藏了，这不重要，我只是来打包的。</p><p>找到 assets/data 下的 <strong>dcloud_control.xml</strong>文件，点开它，将文件中appid的值，改成 <strong>HBuilder X</strong>中生成的appid。appid记不住没关系，还记得第5步中让你移动的那个文件夹吗，它的文件名就是appid</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fde6d4b9eb1d443ebb2d6bbcae17257f8.png&amp;valid=false" alt=""></p><h3 id="t7-8-生成android证书签名" tabindex="-1"><a class="header-anchor" href="#t7-8-生成android证书签名"><span>{#t7}8. 生成Android证书签名</span></a></h3>',14),F={href:"https://www.bilibili.com/read/cv14139888",target:"_blank",rel:"noopener noreferrer"},U={href:"https://blog.csdn.net/qq_44693047/article/details/125089245",target:"_blank",rel:"noopener noreferrer"},x=(0,n._)("h3",{id:"t8-9-生成appkey",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#t8-9-生成appkey"},[(0,n._)("span",null,"{#t8}9. 生成appkey")])],-1),v={href:"https://dev.dcloud.net.cn/#/pages/app/list",target:"_blank",rel:"noopener noreferrer"},S=(0,n._)("strong",null,"HBuilder X",-1),y=(0,n.uE)('<p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F9585547c6a524761af537d531e3dbf2f.png&amp;valid=false" alt=""></p><p>点击上方的 <strong>离线打包Key管理</strong>按钮，进入生成appkey的菜单。我的这个菜单是已经生成appkey的，所以会和你第一次点进来有所不同，不用担心。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F5a7c435c465e48a2bdd542639fc4c3be.png&amp;valid=false" alt=""></p><p>**选择平台：**我们选择Android，因为我们这次是打包apk。</p><p>**Android包名：*<em><strong>包名不能随便写，否则安装apk打开后会报错！</strong> 它的值在离线SDK的 \\HBuilder-Integrate-AS\\simpleDemo\\src\\main*<em>AndroidManifest.xml</em></em> 中，没改过的话应该跟我一样，是 com.android.simple</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F922fd4bb5e1f48aea7881cfca66b6631.png&amp;valid=false" alt=""></p><p><strong>Android证书签名SHA1</strong>：第8步中让你记下的SHA1安全码。</p><p>这些填完后，点确认还是啥的，应该就可以生成appkey了。</p><h3 id="t9-10-在-androidmanifest-xml-中配置appkey" tabindex="-1"><a class="header-anchor" href="#t9-10-在-androidmanifest-xml-中配置appkey"><span>{#t9}10. 在 <strong>AndroidManifest.xml 中配置appKey</strong></span></a></h3><p>回到<strong>Android Studio</strong> ，在 <strong>AndroidManifest.xml</strong> 中配置appKey<img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F71f7cde4a0d04d44bac499846c3a3652.png&amp;valid=false" alt=""></p><h3 id="t10-11-打包apk" tabindex="-1"><a class="header-anchor" href="#t10-11-打包apk"><span>{#t10}11. 打包apk</span></a></h3><p>现在万事俱备，只剩打包了，点击 <strong>Android Studio</strong> 上方的 <strong>Build</strong>--&gt;<strong>Generate Signed Bundle / APK...</strong></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Fe2cb44eb834a4740bc775d8a21314ff9.png&amp;valid=false" alt=""></p><p>弹出打包窗口，选择 <strong>APK</strong>，然后点击 <strong>Next</strong></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F4404540516da47debd921894279390a1.png&amp;valid=false" alt=""></p><p>点击 <strong>Choose existing...</strong>，选择第8步让你记下的证书存放路径，<strong>Key store path</strong>就会自动填充，<strong>Key store password、Key alias、key password</strong> ，这三项也在第8步中设置。如果两个password记不住了，那就按第8步的教程重新生成一个证书吧。<strong>Remember passwords</strong> 根据自己需要吧（小白还是勾吧，记住密码）。全部填完后点击下方 <strong>Next</strong></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F12da6dc9203a435d94c6d35e98fd5522.png&amp;valid=false" alt=""></p><p>最后就是选择导出路径，然后选择 <strong>release</strong>，然后点击下方<strong>Finish</strong>。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Faf5ac105ee184c989d3c8e42730585bd.png&amp;valid=false" alt=""></p><p>导出成功后，<strong>Android Studio</strong> 下方的 <strong>Build</strong>控制台会提示 <strong>BUILD SUCCESSFUL</strong> 。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F15fa82fc2998451baf6fbe97cd27d973.png&amp;valid=false" alt=""></p><p>然后就可以在导出路劲的release文件夹里找到打包好的apk文件了，截图里的是默认导出路径，你可以在release的时候选择你的导出路径。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F71c5dcfef34740bda52369f831ceeb8f.png&amp;valid=false" alt=""></p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2Ff313833751a44b17b4311c0069ec5ed5.png&amp;valid=false" alt=""></p><p>然后在手机上安装刚才的apk并打开，如果正常打开，那基本就成功了。</p><p>我在摸索的时候，打包成功后，安装到手机，打开app的时候提示<strong>appkey不存在或配置错误</strong>，后来发现是第9步生成appkey的时候，包名写错了，一定要和 <strong>AndroidManifest.xml</strong>文件中的包名一样。</p><p><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fimg-blog.csdnimg.cn%2F4db756fc0dec49c5b61a7d6e05af7db3.jpeg&amp;valid=false" alt=""></p><p>更多进阶的内容，等我摸索完再发文章，多多点赞，感谢支持！</p>',28),D={href:"https://cubox.pro/my/card?id=7167868944626221066",target:"_blank",rel:"noopener noreferrer"},K={},B=(0,a(3744).Z)(K,[["render",function(e,t){const a=(0,n.up)("ExternalLinkIcon");return(0,n.wg)(),(0,n.iD)("div",null,[p,(0,n._)("p",null,[(0,n._)("a",r,[(0,n.Uk)("blog.csdn.net"),(0,n.Wm)(a)]),(0,n.Uk)("成就一亿技术人!")]),(0,n._)("p",null,[(0,n.Uk)("最近可能要接一个"),(0,n._)("a",s,[(0,n.Uk)("uni-app"),(0,n.Wm)(a)]),(0,n.Uk)("的项目，之前没有接触过，因此学习了一下，好在uni-app基本算是vue和微信小程序的结合体，所以写代码方面问题不是太多，不懂的百度一下基本都能处理。写完demo之后，demo的内容应该能告诉客户我可以做，但我一开始是先用手机录制视频，然后把录制的视频给客户看的。但这样不够好，因为不知道打包成apk后会遇到什么问题，因此还是自己摸索着去打包成可安装的apk，直接让客户试用。")]),l,d,(0,n._)("ol",null,[i,o,(0,n._)("li",null,[(0,n.Uk)("apk打包SDK："),g,(0,n.Uk)("（下载地址："),(0,n._)("a",c,[(0,n.Uk)("Android离线SDK"),(0,n.Wm)(a)]),(0,n.Uk)("）")]),(0,n._)("li",null,[(0,n.Uk)("生成签名证书的工具："),u,(0,n.Uk)(" （网上说只要装jre就行，但jdk里包含jre，所以直接装jdk吧，jdk装完要配置环境变量，"),(0,n._)("a",m,[(0,n.Uk)("jdk环境变量"),(0,n.Wm)(a)]),(0,n.Uk)("的配置可以看这个："),(0,n._)("a",h,[(0,n.Uk)("jdk环境变量配置"),(0,n.Wm)(a)]),(0,n.Uk)("）")]),(0,n._)("li",null,[(0,n.Uk)("生成appkey的网站：DCLOUD的开发者中心（网址："),(0,n._)("a",f,[(0,n.Uk)("开发者中心"),(0,n.Wm)(a)]),(0,n.Uk)("）")])]),k,(0,n._)("p",null,[b,(0,n.Uk)("下载地址："),(0,n._)("a",_,[(0,n.Uk)("Android离线SDK"),(0,n.Wm)(a)])]),A,(0,n._)("p",null,[(0,n.Uk)("这一步我参考了别人的文章，所以不多讲了，按他的步骤做（jdk环境变量的配置虽然他文章里写了，小白最好还是看这个："),(0,n._)("a",F,[(0,n.Uk)("jdk环境变量配置"),(0,n.Wm)(a)]),(0,n.Uk)("），记下生成证书的文件路径、证书的SHA1安全码、证书的alias（别名）以及设置的两个密码（怕忘记，两个密码设一样的），后续步骤会用得到。参考网址（"),(0,n._)("a",U,[(0,n.Uk)("生成Android证书签名"),(0,n.Wm)(a)]),(0,n.Uk)("）。")]),x,(0,n._)("p",null,[(0,n.Uk)("前往 DCLOUD 的开发者中心（网址："),(0,n._)("a",v,[(0,n.Uk)("开发者中心"),(0,n.Wm)(a)]),(0,n.Uk)("），如果按照我的步骤做，那在第2步 "),S,(0,n.Uk)("中生成appid后，就能在开发者中心我的应用中看到这条应用，点击应用名称会跳转到该条应用的管理页面。")]),y,(0,n._)("p",null,[(0,n._)("a",D,[(0,n.Uk)("跳转到 Cubox 查看"),(0,n.Wm)(a)])])])}]])},3936:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n=JSON.parse('{"key":"v-21ed57ba","path":"/guide/08.uniapp/uni-app%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E6%88%90apk%EF%BC%88%E6%9C%AC%E5%9C%B0%E6%89%93%E5%8C%85....html","title":"uni-app项目打包成apk（本地打包篇）","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"{#t0}1. 本次用到的工具:","slug":"t0-1-本次用到的工具","link":"#t0-1-本次用到的工具","children":[]},{"level":3,"title":"{#t1}2. 导出前的配置","slug":"t1-2-导出前的配置","link":"#t1-2-导出前的配置","children":[]},{"level":3,"title":"{#t2}3. 导出uni-app项目供打包使用","slug":"t2-3-导出uni-app项目供打包使用","link":"#t2-3-导出uni-app项目供打包使用","children":[]},{"level":3,"title":"{#t3} 4. 下载Android离线SDK","slug":"t3-4-下载android离线sdk","link":"#t3-4-下载android离线sdk","children":[]},{"level":3,"title":"{#t4} 5. 将HBuilder X导出的文件夹移动到离线SDK中","slug":"t4-5-将hbuilder-x导出的文件夹移动到离线sdk中","link":"#t4-5-将hbuilder-x导出的文件夹移动到离线sdk中","children":[]},{"level":3,"title":"{#t5} 6. Android Studio 导入SDK中的示例项目","slug":"t5-6-android-studio-导入sdk中的示例项目","link":"#t5-6-android-studio-导入sdk中的示例项目","children":[]},{"level":3,"title":"{#t6}7. 修改dcloud_control.xml 中的 appid","slug":"t6-7-修改dcloud-control-xml-中的-appid","link":"#t6-7-修改dcloud-control-xml-中的-appid","children":[]},{"level":3,"title":"{#t7}8. 生成Android证书签名","slug":"t7-8-生成android证书签名","link":"#t7-8-生成android证书签名","children":[]},{"level":3,"title":"{#t8}9. 生成appkey","slug":"t8-9-生成appkey","link":"#t8-9-生成appkey","children":[]},{"level":3,"title":"{#t9}10. 在 AndroidManifest.xml 中配置appKey","slug":"t9-10-在-androidmanifest-xml-中配置appkey","link":"#t9-10-在-androidmanifest-xml-中配置appkey","children":[]},{"level":3,"title":"{#t10}11. 打包apk","slug":"t10-11-打包apk","link":"#t10-11-打包apk","children":[]}],"git":{},"filePathRelative":"guide/08.uniapp/uni-app项目打包成apk（本地打包....md"}')}}]);